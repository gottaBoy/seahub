{"version":3,"file":"static/js/sharedFileViewMarkdown.aef982dd.js","mappings":"gSAWAA,EAA8CC,OAAOC,OAAOC,YAApDC,EAAMJ,EAANI,OAAQC,EAAWL,EAAXK,YAAaC,EAAON,EAAPM,QAASC,EAAGP,EAAHO,IAEhCC,EAAsB,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAAA,SAAAA,IAAA,OAAAK,EAAAA,EAAAA,GAAA,KAAAL,GAAAG,EAAAG,MAAA,KAAAC,UAAA,CAGzB,OAHyBC,EAAAA,EAAAA,GAAAR,EAAA,EAAAS,IAAA,SAAAC,MAC1B,WACE,OAAOC,EAAAA,EAAAA,KAACC,EAAAA,EAAc,CAACC,SAASF,EAAAA,EAAAA,KAACG,EAAW,IAAKC,SAAS,MAC5D,KAACf,CAAA,CAHyB,CAASgB,EAAAA,WAM/BF,EAAW,SAAAG,IAAAf,EAAAA,EAAAA,GAAAY,EAAAG,GAAA,IAAAC,GAAAd,EAAAA,EAAAA,GAAAU,GAEf,SAAAA,EAAYK,GAAQ,IAADC,EAKf,OALef,EAAAA,EAAAA,GAAA,KAAAS,IACjBM,EAAAF,EAAAG,KAAA,KAAMF,IAmBRG,eAAiB,SAACC,GAChB,GAAsB,SAAlBA,EAAUC,KAAiB,CAC7B,IAAIC,EAAWF,EAAUG,KAAKC,IAK9B,IAHW,IAAIC,OAAOC,EAAAA,GAAa,QAAUjC,EAAQ,gBAG7CkC,KAAKL,GACX,OAGF,IAAIM,EAAYN,EAASO,UAAUH,EAAAA,GAAWI,QAC1CC,EAAQH,EAAUI,QAAQ,SAC1BC,EAASL,EAAUI,QAAQ,KAC/BJ,EAAYA,EAAUC,UAAUE,EAAQ,EAAGE,GAG3Cb,EAAUG,KAAKC,IAAME,EAAAA,GAAa,qCAAuChC,EAAc,SAAWkC,CACpG,CACA,OAAOR,CACT,EAACH,EAEDiB,wBAA0B,SAAC3B,GACzB,OAAO4B,EAAAA,EAAMC,oBAAoB7B,EAAOU,EAAKE,eAC/C,EA1CEF,EAAKoB,MAAQ,CACXC,gBAAiB,GACjBC,SAAU3C,GACVqB,CACJ,CA2DC,OA3DAZ,EAAAA,EAAAA,GAAAM,EAAA,EAAAL,IAAA,oBAAAC,MAED,WAAqB,IAADiC,EAAA,KAClBC,EAAAA,EAAWC,eAAe/C,GAASgD,MAAK,SAACC,GACvCJ,EAAKK,SAAS,CACZP,gBAAiBM,EAAIrB,KACrBgB,SAAS,GAEb,IAAGO,OAAM,SAAAC,GACP,IAAIC,EAAab,EAAAA,EAAMc,YAAYF,GACnCG,EAAAA,EAAQC,OAAOH,EACjB,GACF,GAAC,CAAA1C,IAAA,SAAAC,MA4BD,WACE,OAAIX,GACKY,EAAAA,EAAAA,KAAC4C,EAAAA,EAAiB,IAGvBC,KAAKhB,MAAME,SACN/B,EAAAA,EAAAA,KAAC8C,EAAAA,EAAO,KAIf9C,EAAAA,EAAAA,KAAA,OAAK+C,UAAU,gCAA+BC,UAC5ChD,EAAAA,EAAAA,KAACiD,EAAAA,GAAc,CACblD,MAAO8C,KAAKhB,MAAMC,gBAClBoB,eAAe,EACfC,cAAeC,EAAAA,GAAW,wBAC1BC,qBAAsBR,KAAKnB,2BAInC,KAACvB,CAAA,CAnEc,CAASE,EAAAA,WAsE1BiD,EAAAA,QAAgBtD,EAAAA,EAAAA,KAACX,EAAsB,IAAKkE,SAASC,eAAe,W","sources":["shared-file-view-markdown.js"],"sourcesContent":["import React from 'react';\nimport ReactDom from 'react-dom';\nimport { MarkdownViewer } from '@seafile/seafile-editor';\nimport { seafileAPI } from './utils/seafile-api';\nimport { Utils } from './utils/utils';\nimport { serviceURL, mediaUrl } from './utils/constants';\nimport SharedFileView from './components/shared-file-view/shared-file-view';\nimport SharedFileViewTip from './components/shared-file-view/shared-file-view-tip';\nimport Loading from './components/loading';\nimport toaster from './components/toast';\n\nconst { repoID, sharedToken, rawPath, err } = window.shared.pageOptions;\n\nclass SharedFileViewMarkdown extends React.Component {\n  render() {\n    return <SharedFileView content={<FileContent />} fileType=\"md\" />;\n  }\n}\n\nclass FileContent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      markdownContent: '',\n      loading: !err\n    };\n  }\n\n  componentDidMount() {\n    seafileAPI.getFileContent(rawPath).then((res) => {\n      this.setState({\n        markdownContent: res.data,\n        loading: false\n      });\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  changeImageURL = (innerNode) => {\n    if (innerNode.type == 'image') {\n      let imageUrl = innerNode.data.src;\n\n      const re = new RegExp(serviceURL + '/lib/' + repoID +'/file.*raw=1');\n\n      // different repo\n      if (!re.test(imageUrl)) {\n        return;\n      }\n      // get image path\n      let imagePath = imageUrl.substring(serviceURL.length);\n      let index = imagePath.indexOf('/file');\n      let index2 = imagePath.indexOf('?');\n      imagePath = imagePath.substring(index + 5, index2);\n      // change image url\n      // the image path has been encoded when inserting the image\n      innerNode.data.src = serviceURL + '/view-image-via-share-link/?token=' + sharedToken + '&path=' + imagePath;\n    }\n    return innerNode;\n  };\n\n  modifyValueBeforeRender = (value) => {\n    return Utils.changeMarkdownNodes(value, this.changeImageURL);\n  };\n\n  render() {\n    if (err) {\n      return <SharedFileViewTip />;\n    }\n\n    if (this.state.loading) {\n      return <Loading />;\n    }\n\n    return (\n      <div className=\"shared-file-view-body md-view\">\n        <MarkdownViewer\n          value={this.state.markdownContent}\n          isShowOutline={true}\n          mathJaxSource={mediaUrl + 'js/mathjax/tex-svg.js'}\n          beforeRenderCallback={this.modifyValueBeforeRender}\n        />\n      </div>\n    );\n  }\n}\n\nReactDom.render(<SharedFileViewMarkdown />, document.getElementById('wrapper'));\n"],"names":["_window$shared$pageOp","window","shared","pageOptions","repoID","sharedToken","rawPath","err","SharedFileViewMarkdown","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","_jsx","SharedFileView","content","FileContent","fileType","React","_React$Component2","_super2","props","_this","call","changeImageURL","innerNode","type","imageUrl","data","src","RegExp","serviceURL","test","imagePath","substring","length","index","indexOf","index2","modifyValueBeforeRender","Utils","changeMarkdownNodes","state","markdownContent","loading","_this2","seafileAPI","getFileContent","then","res","setState","catch","error","errMessage","getErrorMsg","toaster","danger","SharedFileViewTip","this","Loading","className","children","MarkdownViewer","isShowOutline","mathJaxSource","mediaUrl","beforeRenderCallback","ReactDom","document","getElementById"],"sourceRoot":""}