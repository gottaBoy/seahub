{"version":3,"file":"static/js/sharedDirView.e02e398a.js","mappings":"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","sources":["components/dialog/copy-move-dirent-progress-dialog.js","components/dialog/image-dialog.js","components/dialog/zip-download-dialog.js","components/dialog/list-taggedfiles-dialog.js","models/draft.js","components/dialog/list-repo-drafts-dialog.js","components/repo-info-bar.js","components/shared-link-file-uploader/upload-list-item.js","components/shared-link-file-uploader/forbid-upload-list-item.js","components/shared-link-file-uploader/upload-progress-dialog.js","components/shared-link-file-uploader/file-uploader.js","components/dialog/save-shared-dir-dialog.js","shared-dir-view.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { gettext } from '../../utils/constants';\n\nconst propTypes = {\n  type: PropTypes.oneOf(['move', 'copy']).isRequired,\n  asyncOperatedFilesLength: PropTypes.number.isRequired,\n  asyncOperationProgress: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  toggleDialog: PropTypes.func.isRequired,\n};\n\nclass CopyMoveDirentProgressDialog extends React.Component {\n\n  render() {\n\n    let { type , asyncOperationProgress, asyncOperatedFilesLength } = this.props;\n    let title = type === 'move' ? gettext('Move {num} items') : gettext('Copy {num} items');\n    title = title.replace('{num}', asyncOperatedFilesLength);\n    let progressStyle = {\n      width: asyncOperationProgress + '%',\n      lineHeight: '40px',\n      textAlign: 'left',\n    };\n    return (\n      <Modal isOpen={true}>\n        <ModalHeader toggle={this.props.toggleDialog}>{title}</ModalHeader>\n        <ModalBody style={{minHeight: '80px'}}>\n          <div className=\"progress\" style={{height: '40px'}}>\n            <div\n              className=\"progress-bar pl-2\"\n              role=\"progressbar\"\n              style={progressStyle}\n              aria-valuenow={asyncOperationProgress}\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n            >\n              {asyncOperationProgress + '%'}\n            </div>\n          </div>\n        </ModalBody>\n      </Modal>\n    );\n  }\n}\n\nCopyMoveDirentProgressDialog.propTypes = propTypes;\n\nexport default CopyMoveDirentProgressDialog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gettext } from '../../utils/constants';\nimport Lightbox from '@seafile/react-image-lightbox';\nimport '@seafile/react-image-lightbox/style.css';\n\nconst propTypes = {\n  imageItems: PropTypes.array.isRequired,\n  imageIndex: PropTypes.number.isRequired,\n  closeImagePopup: PropTypes.func.isRequired,\n  moveToPrevImage: PropTypes.func.isRequired,\n  moveToNextImage: PropTypes.func.isRequired\n};\n\nclass ImageDialog extends React.Component {\n\n  render() {\n    const imageItems = this.props.imageItems;\n    const imageIndex = this.props.imageIndex;\n    const imageItemsLength = imageItems.length;\n    const name = imageItems[imageIndex].name;\n    const imageTitle = `${name} (${imageIndex + 1}/${imageItemsLength})`;\n\n    return (\n      <Lightbox\n        imageTitle={imageTitle}\n        mainSrc={imageItems[imageIndex].src}\n        nextSrc={imageItems[(imageIndex + 1) % imageItemsLength].src}\n        prevSrc={imageItems[(imageIndex + imageItemsLength - 1) % imageItemsLength].src}\n        onCloseRequest={this.props.closeImagePopup}\n        onMovePrevRequest={this.props.moveToPrevImage}\n        onMoveNextRequest={this.props.moveToNextImage}\n        imagePadding={70}\n        imageLoadErrorMessage={gettext('The image could not be loaded.')}\n        prevLabel={gettext('Previous (Left arrow key)')}\n        nextLabel={gettext('Next (Right arrow key)')}\n        closeLabel={gettext('Close (Esc)')}\n        zoomInLabel={gettext('Zoom in')}\n        zoomOutLabel={gettext('Zoom out')}\n      />\n    );\n  }\n}\n\nImageDialog.propTypes = propTypes;\n\nexport default ImageDialog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { gettext, fileServerRoot } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { Utils } from '../../utils/utils';\nimport Loading from '../loading';\n\nconst propTypes = {\n  data: PropTypes.object,\n  token: PropTypes.string,\n  path: PropTypes.string.isRequired,\n  repoID: PropTypes.string,\n  target: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.array\n  ]),\n  toggleDialog: PropTypes.func.isRequired\n};\n\nlet interval;\n\nclass ZipDownloadDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      errorMsg: '',\n      zipProgress: null\n    };\n  }\n\n  componentDidMount() {\n    const { token, path, repoID, target } = this.props;\n    let getZipTask;\n    if (token) {\n      getZipTask = target.length ?\n        seafileAPI.getShareLinkDirentsZipTask(token, path, target) :\n        seafileAPI.getShareLinkZipTask(token, path);\n    } else {\n      getZipTask = seafileAPI.zipDownload(repoID, path, target);\n    }\n    getZipTask.then((res) => {\n      const zipToken = res.data['zip_token'];\n      this.setState({\n        isLoading: false,\n        errorMsg: '',\n        zipToken: zipToken\n      });\n      this.queryZipProgress();\n      interval = setInterval(this.queryZipProgress, 1000);\n    }).catch((error) => {\n      let errorMsg = Utils.getErrorMsg(error);\n      this.setState({\n        isLoading: false,\n        errorMsg: errorMsg\n      });\n    });\n  }\n\n  queryZipProgress = () => {\n    const zipToken = this.state.zipToken;\n    seafileAPI.queryZipProgress(zipToken).then((res) => {\n      const data = res.data;\n      if (data.failed == 1) {\n        clearInterval(interval);\n        this.setState({\n          isLoading: false,\n          errorMsg: data.failed_reason\n        });\n      } else {\n        this.setState({\n          zipProgress: data.total == 0 ? '100%' : (data.zipped/data.total*100).toFixed(2) + '%'\n        });\n        if (data['total'] == data['zipped']) {\n          clearInterval(interval);\n          this.props.toggleDialog();\n          location.href = `${fileServerRoot}zip/${zipToken}`;\n        }\n      }\n    }).catch((error) => {\n      clearInterval(interval);\n      let errorMsg = Utils.getErrorMsg(error);\n      this.setState({\n        isLoading: false,\n        errorMsg: errorMsg\n      });\n    });\n  };\n\n  cancelZipTask = () => {\n    const zipToken = this.state.zipToken;\n    seafileAPI.cancelZipTask(zipToken).then((res) => {\n    // do nothing\n    }).catch((error) => {\n    // do nothing\n    });\n  };\n\n  toggleDialog = () => {\n    const zipProgress = this.state.zipProgress;\n    if (zipProgress && zipProgress != '100%') {\n      clearInterval(interval);\n      this.cancelZipTask();\n    }\n    this.props.toggleDialog();\n  };\n\n  render() {\n    return (\n      <Modal isOpen={true} toggle={this.toggleDialog}>\n        <ModalHeader toggle={this.toggleDialog}>{gettext('Download')}</ModalHeader>\n        <ModalBody>\n          <Content data={this.state} />\n        </ModalBody>\n      </Modal>\n    );\n  }\n}\n\nclass Content extends React.Component {\n\n  render() {\n    const {isLoading, errorMsg, zipProgress} = this.props.data;\n\n    if (isLoading) {\n      return <Loading />;\n    }\n\n    if (errorMsg) {\n      return <p className=\"error mt-4 text-center\">{errorMsg}</p>;\n    }\n\n    return <p className=\"mt-4 text-center\">{`${gettext('Packaging...')} ${zipProgress}`}</p>;\n  }\n}\n\nContent.propTypes = {\n  data: PropTypes.object,\n};\n\nZipDownloadDialog.propTypes = propTypes;\n\nexport default ZipDownloadDialog;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport moment from 'moment';\nimport { gettext, siteRoot } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { Utils } from '../../utils/utils';\nimport toaster from '../toast';\n\nconst propTypes = {\n  repoID: PropTypes.string.isRequired,\n  currentTag: PropTypes.object.isRequired,\n  toggleCancel: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  updateUsedRepoTags: PropTypes.func,\n  onFileTagChanged: PropTypes.func,\n  shareLinkToken: PropTypes.string,\n  enableFileDownload: PropTypes.bool\n};\n\nclass ListTaggedFilesDialog extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      taggedFileList: [],\n    };\n  }\n\n  onFileTagChanged = (TaggedFile) => {\n    const path = TaggedFile.parent_path;\n    const dirent = {name: TaggedFile.filename};\n    let direntPath = path === '/' ? path + TaggedFile.filename : path + '/' + TaggedFile.filename;\n    this.props.onFileTagChanged(dirent, direntPath);\n  };\n\n  onDeleteTaggedFile = (taggedFile) => {\n    let repoID = this.props.repoID;\n    let fileTagID = taggedFile.file_tag_id;\n    seafileAPI.deleteFileTag(repoID, fileTagID).then(res => {\n      this.getTaggedFiles();\n      this.props.updateUsedRepoTags();\n      if ((this.props.onFileTagChanged) && !taggedFile.file_deleted) this.onFileTagChanged(taggedFile);\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  };\n\n  componentDidMount() {\n    this.getTaggedFiles();\n  }\n\n  getTaggedFiles = () => {\n    let { repoID, currentTag, shareLinkToken } = this.props;\n    let request = shareLinkToken ?\n      seafileAPI.getShareLinkTaggedFiles(shareLinkToken, currentTag.id) :\n      seafileAPI.listTaggedFiles(repoID, currentTag.id);\n    request.then(res => {\n      let taggedFileList = [];\n      res.data.tagged_files !== undefined &&\n      res.data.tagged_files.forEach(file => {\n        let taggedFile = file;\n        taggedFileList.push(taggedFile);\n      });\n      this.setState({\n        taggedFileList: taggedFileList,\n      });\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  };\n\n  render() {\n    let taggedFileList = this.state.taggedFileList;\n    return (\n      <Modal isOpen={true} style={{maxWidth: '678px'}}>\n        <ModalHeader toggle={this.props.onClose}>{gettext('Tagged Files')}</ModalHeader>\n        <ModalBody className=\"dialog-list-container\">\n          <table>\n            <thead>\n              <tr>\n                <th width='50%' className=\"ellipsis\">{gettext('Name')}</th>\n                <th width='20%'>{gettext('Size')}</th>\n                <th width='22%'>{gettext('Last Update')}</th>\n                <th width='8%'></th>\n              </tr>\n            </thead>\n            <tbody>\n              {taggedFileList.map((taggedFile, index) => {\n                return (\n                  <TaggedFile\n                    key={index}\n                    repoID={this.props.repoID}\n                    taggedFile={taggedFile}\n                    onDeleteTaggedFile={this.onDeleteTaggedFile}\n                    shareLinkToken={this.props.shareLinkToken}\n                    enableFileDownload={this.props.enableFileDownload}\n                  />\n                );\n              })}\n            </tbody>\n          </table>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.props.toggleCancel}>{gettext('Close')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nListTaggedFilesDialog.propTypes = propTypes;\n\nexport default ListTaggedFilesDialog;\n\nconst TaggedFilePropTypes = {\n  repoID: PropTypes.string.isRequired,\n  taggedFile: PropTypes.object,\n  onDeleteTaggedFile: PropTypes.func.isRequired,\n  shareLinkToken: PropTypes.string,\n  enableFileDownload: PropTypes.bool\n};\n\nclass TaggedFile extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = ({\n      active: false,\n    });\n  }\n\n  onMouseEnter = () => {\n    this.setState({\n      active: true\n    });\n  };\n\n  onMouseLeave = () => {\n    this.setState({\n      active: false\n    });\n  };\n\n  deleteFile = (e) => {\n    e.preventDefault();\n    this.props.onDeleteTaggedFile(this.props.taggedFile);\n  };\n\n  render() {\n    const { taggedFile, shareLinkToken, enableFileDownload } = this.props;\n\n    let path = taggedFile.parent_path ? Utils.joinPath(taggedFile.parent_path, taggedFile.filename) : '';\n    let href = shareLinkToken ?\n      siteRoot + 'd/' + shareLinkToken + '/files/?p=' + Utils.encodePath(path) :\n      siteRoot + 'lib/' + this.props.repoID + '/file' + Utils.encodePath(path);\n\n    return (\n      <tr onMouseEnter={this.onMouseEnter} onMouseLeave={this.onMouseLeave} onFocus={this.onMouseEnter}>\n        {taggedFile.file_deleted ?\n          <Fragment>\n            <td colSpan='3' className=\"name\">{taggedFile.filename}{' '}\n              <span style={{color:'red'}}>{gettext('deleted')}</span>\n            </td>\n          </Fragment>\n          :\n          <Fragment>\n            <td><a href={href} target='_blank' className=\"d-inline-block w-100 ellipsis\" title={taggedFile.filename} rel=\"noreferrer\">{taggedFile.filename}</a></td>\n            <td>{Utils.bytesToSize(taggedFile.size)}</td>\n            <td>{moment.unix(taggedFile.mtime).fromNow()}</td>\n          </Fragment>\n        }\n        <td>\n          {!shareLinkToken &&\n            <a href=\"#\" role=\"button\" aria-label={gettext('Delete')} title={gettext('Delete')} className={`action-icon sf2-icon-x3${this.state.active ? '' : ' invisible'}`} onClick={this.deleteFile}></a>\n          }\n          {(shareLinkToken && enableFileDownload) &&\n            <a className={`action-icon sf2-icon-download${this.state.active ? '' : ' invisible'}`} href={`${href}&dl=1`} title={gettext('Download')} aria-label={gettext('Download')}></a>\n          }\n        </td>\n      </tr>\n    );\n  }\n}\n\nTaggedFile.propTypes = TaggedFilePropTypes;\n","import moment from 'moment';\n\nclass Draft {\n\n  constructor(item) {\n    this.created = item.created_at;\n    this.createdStr = moment((new Date(item.created_at)).getTime()).format('YYYY-MM-DD HH:mm');\n    this.id = item.id;\n    this.ownerNickname = item.owner_nickname;\n    this.originRepoID = item.origin_repo_id;\n    this.draftFilePath = item.draft_file_path;\n  }\n}\n\nexport default Draft;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { gettext, siteRoot } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport moment from 'moment';\nimport editorUtilities from '../../utils/editor-utilities';\nimport toaster from '../../components/toast';\nimport { Utils } from '../../utils/utils';\nimport Draft from '../../models/draft';\n\nconst propTypes = {\n  repoID: PropTypes.string.isRequired,\n  toggle: PropTypes.func.isRequired,\n};\n\nclass ListRepoDraftsDialog extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      drafts: [],\n    };\n  }\n\n  componentDidMount() {\n    seafileAPI.listRepoDrafts(this.props.repoID).then(res => {\n      let drafts = res.data.drafts.map(item => {\n        let draft = new Draft(item);\n        return draft;\n      });\n      this.setState({\n        drafts: drafts\n      });\n    });\n  }\n\n  onDeleteDraftItem = (draft) => {\n    editorUtilities.deleteDraft(draft.id).then(() => {\n      let drafts = this.state.drafts.filter(item => {\n        return item.id !== draft.id;\n      });\n      this.setState({drafts: drafts});\n      let msg = gettext('Successfully deleted draft %(draft)s.');\n      msg = msg.replace('%(draft)s', draft.draftFilePath);\n      toaster.success(msg);\n    }).catch(() => {\n      let msg = gettext('Failed to delete draft %(draft)s.');\n      msg = msg.replace('%(draft)s', draft.draftFilePath);\n      toaster.danger(msg);\n    });\n  };\n\n  toggle = () => {\n    this.props.toggle();\n  };\n\n  render() {\n    return (\n      <Modal isOpen={true}>\n        <ModalHeader toggle={this.toggle}>{gettext('Drafts')}</ModalHeader>\n        <ModalBody className=\"dialog-list-container\">\n          <table>\n            <thead>\n              <tr>\n                <th width='50%' className=\"ellipsis\">{gettext('Name')}</th>\n                <th width='20%'>{gettext('Owner')}</th>\n                <th width='20%'>{gettext('Last Update')}</th>\n                <th width='10%'></th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.drafts.map((item, index) => {\n                return (\n                  <DraftItem\n                    key={index}\n                    draftItem={item}\n                    onDeleteDraftItem={this.onDeleteDraftItem}\n                  />\n                );\n              })}\n            </tbody>\n          </table>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.toggle}>{gettext('Close')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nListRepoDraftsDialog.propTypes = propTypes;\n\nexport default ListRepoDraftsDialog;\n\nconst DraftItemPropTypes = {\n  draftItem: PropTypes.object,\n  onDeleteDraftItem: PropTypes.func.isRequired,\n};\n\nclass DraftItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = ({\n      active: false,\n    });\n  }\n\n  onMouseEnter = () => {\n    this.setState({\n      active: true\n    });\n  };\n\n  onMouseLeave = () => {\n    this.setState({\n      active: false\n    });\n  };\n\n  render() {\n    const draftItem = this.props.draftItem;\n    let href = siteRoot + 'drafts/' + draftItem.id + '/';\n    let className = this.state.active ? 'action-icon sf2-icon-x3' : 'action-icon vh sf2-icon-x3';\n    return (\n      <tr onMouseEnter={this.onMouseEnter} onMouseLeave={this.onMouseLeave}>\n        <td className=\"name\">\n          <a href={href} target='_blank' rel=\"noreferrer\">{Utils.getFileName(draftItem.draftFilePath)}</a>\n        </td>\n        <td>{draftItem.ownerNickname}</td>\n        <td>{moment(draftItem.createdStr).fromNow()}</td>\n        <td>\n          <i className={className} onClick={this.props.onDeleteDraftItem.bind(this, draftItem)}></i>\n        </td>\n      </tr>\n    );\n  }\n}\n\nDraftItem.propTypes = DraftItemPropTypes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ModalPortal from './modal-portal';\nimport ListTaggedFilesDialog from './dialog/list-taggedfiles-dialog';\nimport ListRepoDraftsDialog from './dialog/list-repo-drafts-dialog';\n\nimport '../css/repo-info-bar.css';\n\nconst propTypes = {\n  repoID: PropTypes.string.isRequired,\n  usedRepoTags: PropTypes.array.isRequired,\n  draftCounts: PropTypes.number,\n  updateUsedRepoTags: PropTypes.func,\n  onFileTagChanged: PropTypes.func,\n  className: PropTypes.string,\n  shareLinkToken: PropTypes.string,\n  enableFileDownload: PropTypes.bool\n};\n\nclass RepoInfoBar extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTag: null,\n      isListTaggedFileShow: false,\n      showRepoDrafts: false\n    };\n  }\n\n  onListTaggedFiles = (currentTag) => {\n    this.setState({\n      currentTag: currentTag,\n      isListTaggedFileShow: !this.state.isListTaggedFileShow\n    });\n  };\n\n  onCloseDialog = () => {\n    this.setState({\n      isListTaggedFileShow: false\n    });\n  };\n\n  toggleDrafts = () => {\n    this.setState({\n      showRepoDrafts: !this.state.showRepoDrafts\n    });\n  };\n\n  render() {\n    let { repoID, usedRepoTags, draftCounts, className } = this.props;\n\n    // to be compatible with the existing code\n    if (draftCounts === undefined) {\n      draftCounts = 0;\n    }\n\n    return (\n      <div className={`repo-info-bar ${className ? className : ''}`}>\n        {usedRepoTags.length > 0 && (\n          <ul className=\"used-tag-list\">\n            {usedRepoTags.map((usedRepoTag) => {\n              return (\n                <li key={usedRepoTag.id} className=\"used-tag-item\">\n                  <span className=\"used-tag\" style={{backgroundColor:usedRepoTag.color}}></span>\n                  <span className=\"used-tag-name\" title={usedRepoTag.name}>{usedRepoTag.name}</span>\n                  <button type=\"button\" className=\"used-tag-files border-0 bg-transparent\" onClick={this.onListTaggedFiles.bind(this, usedRepoTag)}>\n                    {usedRepoTag.fileCount > 1 ? usedRepoTag.fileCount + ' files' : usedRepoTag.fileCount + ' file'}\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        )}\n        {/*<div className={usedRepoTags.length > 0 ? 'file-info-list mt-1' : 'file-info-list'}>\n          {draftCounts > 0 &&\n            <span className=\"file-info\">\n              <span className=\"info-icon sf2-icon-drafts\"></span>\n              <span className=\"used-tag-name\">{gettext('draft')}</span>\n              <button type=\"button\" className=\"used-tag-files border-0 bg-transparent\" onClick={this.toggleDrafts}>\n                {draftCounts > 1 ? draftCounts + ' files' : draftCounts + ' file'}\n              </button>\n            </span>\n          }\n        </div>*/}\n        {this.state.isListTaggedFileShow && (\n          <ModalPortal>\n            <ListTaggedFilesDialog\n              repoID={repoID}\n              currentTag={this.state.currentTag}\n              onClose={this.onCloseDialog}\n              toggleCancel={this.onListTaggedFiles}\n              updateUsedRepoTags={this.props.updateUsedRepoTags}\n              onFileTagChanged={this.props.onFileTagChanged}\n              shareLinkToken={this.props.shareLinkToken}\n              enableFileDownload={this.props.enableFileDownload}\n            />\n          </ModalPortal>\n        )}\n\n        {this.state.showRepoDrafts && (\n          <ModalPortal>\n            <ListRepoDraftsDialog\n              toggle={this.toggleDrafts}\n              repoID={this.props.repoID}\n            />\n          </ModalPortal>\n        )}\n\n      </div>\n    );\n  }\n}\n\nRepoInfoBar.propTypes = propTypes;\n\nexport default RepoInfoBar;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { gettext } from '../../utils/constants';\nimport { Utils } from '../../utils/utils';\n\nconst propTypes = {\n  resumableFile: PropTypes.object.isRequired,\n  onUploadCancel: PropTypes.func.isRequired,\n  onUploadRetry: PropTypes.func.isRequired,\n};\n\nconst UPLOAD_UPLOADING = 'uploading';\nconst UPLOAD_ERROR = 'error';\nconst UPLOAD_ISSAVING = 'isSaving';\nconst UPLOAD_UPLOADED = 'uploaded';\n\nclass UploadListItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      uploadState: UPLOAD_UPLOADING\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    let { resumableFile } = nextProps;\n    let uploadState = UPLOAD_UPLOADING;\n\n    if (resumableFile.error) {\n      uploadState = UPLOAD_ERROR;\n    } else {\n      if (resumableFile.remainingTime === 0 && !resumableFile.isSaved) {\n        uploadState = UPLOAD_ISSAVING;\n      }\n\n      if (resumableFile.isSaved) {\n        uploadState = UPLOAD_UPLOADED;\n      }\n    }\n\n    this.setState({uploadState: uploadState});\n  }\n\n  onUploadCancel = (e) => {\n    e.preventDefault();\n    this.props.onUploadCancel(this.props.resumableFile);\n  };\n\n  onUploadRetry = (e) => {\n    e.preventDefault();\n    this.props.onUploadRetry(this.props.resumableFile);\n  };\n\n  formatFileSize = (size) => {\n    if (typeof size !== 'number') {\n      return '';\n    }\n    if (size >= 1000 * 1000 * 1000) {\n      return (size / (1000 * 1000 * 1000)).toFixed(1) + ' G';\n    }\n    if (size >= 1000 * 1000) {\n      return (size / (1000 * 1000)).toFixed(1) + ' M';\n    }\n    if (size >= 1000) {\n      return (size / 1000).toFixed(1) + ' K';\n    }\n    return size.toFixed(1) + ' B';\n  };\n\n  render() {\n    let { resumableFile } = this.props;\n    let progress = Math.round(resumableFile.progress() * 100);\n    let error = resumableFile.error;\n\n    const fileName = resumableFile.newFileName;\n    const size = this.formatFileSize(resumableFile.size);\n\n    return (\n      <tr className=\"file-upload-item\">\n        <td className=\"upload-name\">\n          <div className=\"ellipsis\" title={fileName}>{fileName}</div>\n        </td>\n        <td className=\"ellipsis\">\n          <span className=\"file-size\" title={size}>{size}</span>\n        </td>\n        <td className=\"upload-progress ellipsis\">\n          {(this.state.uploadState === UPLOAD_UPLOADING || this.state.uploadState === UPLOAD_ISSAVING) &&\n            <Fragment>\n              {resumableFile.size >= (100 * 1000 * 1000) &&\n                <Fragment>\n                  {resumableFile.isUploading() && (\n                    <div className=\"progress-container\">\n                      <div className=\"progress\">\n                        <div className=\"progress-bar\" role=\"progressbar\" style={{width: `${progress}%`}} aria-valuenow={progress} aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                      </div>\n                      {(resumableFile.remainingTime === -1) && <div className=\"progress-text\">{gettext('Preparing to upload...')}</div>}\n                      {(resumableFile.remainingTime > 0) && <div className=\"progress-text\">{gettext('Remaining')}{' '}{Utils.formatTime(resumableFile.remainingTime)}</div>}\n                      {(resumableFile.remainingTime === 0) && <div className=\"progress-text\">{gettext('Indexing...')}</div>}\n                    </div>\n                  )}\n                  {!resumableFile.isUploading() && (\n                    <div className=\"progress-container d-flex align-items-center\">\n                      <div className=\"progress\">\n                        <div className=\"progress-bar\" role=\"progressbar\" style={{width: `${progress}%`}} aria-valuenow={progress} aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                      </div>\n                    </div>\n                  )}\n                </Fragment>\n              }\n              {(resumableFile.size < (100 * 1000 * 1000)) &&\n                <div className=\"progress-container d-flex align-items-center\">\n                  <div className=\"progress\">\n                    <div className=\"progress-bar\" role=\"progressbar\" style={{width: `${progress}%`}} aria-valuenow={progress} aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                  </div>\n                </div>\n              }\n            </Fragment>\n          }\n          {this.state.uploadState === UPLOAD_ERROR && (\n            <div className=\"message err-message ml-0\" dangerouslySetInnerHTML={{__html: error}}></div>\n          )}\n        </td>\n        <td className=\"upload-operation ellipsis\">\n          <Fragment>\n            {this.state.uploadState === UPLOAD_UPLOADING && (\n              <a href=\"#\" onClick={this.onUploadCancel}>{gettext('Cancel')}</a>\n            )}\n            {this.state.uploadState === UPLOAD_ERROR && (\n              <a href=\"#\" onClick={this.onUploadRetry}>{gettext('Retry')}</a>\n            )}\n            {this.state.uploadState === UPLOAD_ISSAVING && (\n              <span className=\"saving\">{gettext('Saving...')}</span>\n            )}\n            {this.state.uploadState === UPLOAD_UPLOADED && (\n              <span className=\"uploaded\">{gettext('Uploaded')}</span>\n            )}\n          </Fragment>\n        </td>\n      </tr>\n    );\n  }\n}\n\nUploadListItem.propTypes = propTypes;\n\nexport default UploadListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gettext, maxUploadFileSize } from '../../utils/constants';\n\nconst propTypes = {\n  file: PropTypes.object,\n};\n\nclass ForbidUploadListItem extends React.Component {\n\n  render() {\n    let { file } = this.props;\n    let msg = gettext('Please upload files less than {placeholder}M').replace('{placeholder}', maxUploadFileSize);\n    return (\n      <tr className=\"file-upload-item\">\n        <td className=\"upload-name\">\n          <div className=\"ellipsis\" title={file.name}>{file.name}</div>\n        </td>\n\n        <td colSpan={3} className=\"error\">{msg}</td>\n      </tr>\n    );\n  }\n}\n\nForbidUploadListItem.propTypes = propTypes;\n\nexport default ForbidUploadListItem;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { gettext } from '../../utils/constants';\nimport { Utils } from '../../utils/utils';\nimport UploadListItem from './upload-list-item';\nimport ForbidUploadListItem from './forbid-upload-list-item';\n\nconst propTypes = {\n  uploadBitrate: PropTypes.number.isRequired,\n  totalProgress: PropTypes.number.isRequired,\n  retryFileList: PropTypes.array.isRequired,\n  uploadFileList: PropTypes.array.isRequired,\n  forbidUploadFileList: PropTypes.array.isRequired,\n  onCloseUploadDialog: PropTypes.func.isRequired,\n  onCancelAllUploading: PropTypes.func.isRequired,\n  onUploadCancel: PropTypes.func.isRequired,\n  onUploadRetry: PropTypes.func.isRequired,\n  onUploadRetryAll: PropTypes.func.isRequired,\n  allFilesUploaded: PropTypes.bool.isRequired,\n};\n\nclass UploadProgressDialog extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isMinimized: false\n    };\n  }\n\n  onCancelAllUploading = () => {\n    this.props.onCancelAllUploading();\n  };\n\n  onMinimizeUpload = (e) => {\n    e.nativeEvent.stopImmediatePropagation();\n    this.setState({isMinimized: !this.state.isMinimized});\n  };\n\n  onCloseUpload = (e) => {\n    e.nativeEvent.stopImmediatePropagation();\n    this.props.onCloseUploadDialog();\n  };\n\n  render() {\n\n    let uploadBitrate = Utils.formatBitRate(this.props.uploadBitrate);\n    let uploadedMessage = gettext('File Upload');\n    let uploadingMessage = gettext('File Uploading...') + ' ' + this.props.totalProgress + '% (' + uploadBitrate + ')';\n\n    let uploadingOptions = (<span className=\"sf2-icon-minus\" onClick={this.onMinimizeUpload}></span>);\n\n    let uploadedOptions = (\n      <Fragment>\n        <span className=\"sf2-icon-minus\" onClick={this.onMinimizeUpload}></span>\n        <span className=\"sf2-icon-x1\" onClick={this.onCloseUpload}></span>\n      </Fragment>\n    );\n\n    let { totalProgress, allFilesUploaded, retryFileList } = this.props;\n\n    return (\n      <div className=\"uploader-list-view mw-100\" style={{height: this.state.isMinimized ? '2.25rem' : '20rem'}}>\n        <div className=\"uploader-list-header\">\n          <div className=\"title\">\n            {totalProgress === 100 ? uploadedMessage : uploadingMessage}\n          </div>\n          <div className=\"uploader-options\">\n            {totalProgress === 100 ||  allFilesUploaded ? uploadedOptions : uploadingOptions}\n          </div>\n        </div>\n        <div className=\"uploader-list-content\">\n          <div className=\"text-right mt-2\">\n            {retryFileList.length > 0 ?\n              <span className=\"cursor-pointer\" onClick={this.props.onUploadRetryAll}>{gettext('Retry All')}</span>\n              :\n              <span className=\"cursor-pointer disabled-link\">{gettext('Retry All')}</span>\n            }\n            {!allFilesUploaded ?\n              <span className=\"cursor-pointer ml-3\" onClick={this.onCancelAllUploading}>{gettext('Cancel All')}</span>\n              :\n              <span className=\"cursor-pointer ml-3 disabled-link\" >{gettext('Cancel All')}</span>\n            }\n          </div>\n          <table className=\"table-thead-hidden\">\n            <thead>\n              <tr>\n                <th width=\"30%\">{gettext('name')}</th>\n                <th width=\"20%\">{gettext('size')}</th>\n                <th width=\"30%\">{gettext('progress')}</th>\n                <th width=\"20%\">{gettext('state')}</th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                this.props.forbidUploadFileList.map((file, index) => {\n                  return (<ForbidUploadListItem key={index} file={file} />);\n                })\n              }\n              {\n                this.props.uploadFileList.map((resumableFile, index) => {\n                  return (\n                    <UploadListItem\n                      key={index}\n                      resumableFile={resumableFile}\n                      onUploadCancel={this.props.onUploadCancel}\n                      onUploadRetry={this.props.onUploadRetry}\n                    />\n                  );\n                })\n              }\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nUploadProgressDialog.propTypes = propTypes;\n\nexport default UploadProgressDialog;\n","// the parent folder of this file is copied from components/file-uploader\n// this file is modified according to the requirements of 'file upload' in 'shared dir link'\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Resumablejs from '@seafile/resumablejs';\nimport MD5 from 'MD5';\nimport { resumableUploadFileBlockSize, maxUploadFileSize, maxNumberOfFilesForFileupload } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { Utils } from '../../utils/utils';\nimport { gettext } from '../../utils/constants';\nimport UploadProgressDialog from './upload-progress-dialog';\nimport toaster from '../toast';\nimport '../../css/file-uploader.css';\n\nconst propTypes = {\n  token: PropTypes.string.isRequired,\n  repoID: PropTypes.string.isRequired,\n  //direntList: PropTypes.array.isRequired,\n  filetypes: PropTypes.array,\n  chunkSize: PropTypes.number,\n  withCredentials: PropTypes.bool,\n  testMethod: PropTypes.string,\n  testChunks: PropTypes.number,\n  simultaneousUploads: PropTypes.number,\n  fileParameterName: PropTypes.string,\n  minFileSizeErrorCallback: PropTypes.func,\n  fileTypeErrorCallback: PropTypes.func,\n  dragAndDrop: PropTypes.bool.isRequired,\n  path: PropTypes.string.isRequired,\n  relativePath: PropTypes.string.isRequired,\n  onFileUploadSuccess: PropTypes.func.isRequired\n};\n\nclass FileUploader extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      retryFileList: [],\n      uploadFileList: [],\n      forbidUploadFileList: [],\n      totalProgress: 0,\n      isUploadProgressDialogShow: false,\n      isUploadRemindDialogShow: false,\n      currentResumableFile: null,\n      uploadBitrate: 0,\n      allFilesUploaded: false,\n    };\n\n    this.uploadInput = React.createRef();\n\n    this.notifiedFolders = [];\n\n    this.timestamp = null;\n    this.loaded = 0;\n    this.bitrateInterval = 500; // Interval in milliseconds to calculate the bitrate\n    window.onbeforeunload = this.onbeforeunload;\n    this.isUploadLinkLoaded = false;\n  }\n\n  componentDidMount() {\n    this.resumable = new Resumablejs({\n      target: '',\n      query: this.setQuery || {},\n      fileType: this.props.filetypes,\n      maxFiles: maxNumberOfFilesForFileupload || undefined,\n      maxFileSize: maxUploadFileSize * 1000 * 1000 || undefined,\n      testMethod: this.props.testMethod || 'post',\n      testChunks: this.props.testChunks || false,\n      headers: this.setHeaders || {},\n      withCredentials: this.props.withCredentials || false,\n      chunkSize: parseInt(resumableUploadFileBlockSize) * 1024 * 1024 || 1 * 1024 * 1024,\n      simultaneousUploads: this.props.simultaneousUploads || 1,\n      fileParameterName: this.props.fileParameterName,\n      generateUniqueIdentifier: this.generateUniqueIdentifier,\n      forceChunkSize: true,\n      maxChunkRetries: 3,\n      minFileSize: 0,\n    });\n\n    this.resumable.assignBrowse(this.uploadInput.current, true);\n\n    //Enable or Disable DragAnd Drop\n    if (this.props.dragAndDrop === true) {\n      this.resumable.enableDropOnDocument();\n    }\n\n    this.bindCallbackHandler();\n    this.bindEventHandler();\n  }\n\n  componentWillUnmount = () => {\n    window.onbeforeunload = null;\n    if (this.props.dragAndDrop === true) {\n      this.resumable.disableDropOnDocument();\n    }\n  };\n\n  onbeforeunload = () => {\n    if (window.uploader &&\n        window.uploader.isUploadProgressDialogShow &&\n        window.uploader.totalProgress !== 100) {\n      return '';\n    }\n  };\n\n  bindCallbackHandler = () => {\n    let { minFileSizeErrorCallback, fileTypeErrorCallback } = this.props;\n\n    if (this.maxFilesErrorCallback) {\n      this.resumable.opts.maxFilesErrorCallback = this.maxFilesErrorCallback;\n    }\n\n    if (minFileSizeErrorCallback) {\n      this.resumable.opts.minFileSizeErrorCallback = this.props.minFileSizeErrorCallback;\n    }\n\n    if (this.maxFileSizeErrorCallback) {\n      this.resumable.opts.maxFileSizeErrorCallback = this.maxFileSizeErrorCallback;\n    }\n\n    if (fileTypeErrorCallback) {\n      this.resumable.opts.fileTypeErrorCallback = this.props.fileTypeErrorCallback;\n    }\n\n  };\n\n  bindEventHandler = () => {\n    this.resumable.on('chunkingComplete', this.onChunkingComplete.bind(this));\n    this.resumable.on('fileAdded', this.onFileAdded.bind(this));\n    this.resumable.on('filesAddedComplete', this.filesAddedComplete.bind(this));\n    this.resumable.on('fileProgress', this.onFileProgress.bind(this));\n    this.resumable.on('fileSuccess', this.onFileUploadSuccess.bind(this));\n    this.resumable.on('progress', this.onProgress.bind(this));\n    this.resumable.on('complete', this.onComplete.bind(this));\n    this.resumable.on('pause', this.onPause.bind(this));\n    this.resumable.on('fileRetry', this.onFileRetry.bind(this));\n    this.resumable.on('fileError', this.onFileError.bind(this));\n    this.resumable.on('error', this.onError.bind(this));\n    this.resumable.on('beforeCancel', this.onBeforeCancel.bind(this));\n    this.resumable.on('cancel', this.onCancel.bind(this));\n    this.resumable.on('dragstart', this.onDragStart.bind(this));\n  };\n\n  maxFilesErrorCallback = (files, errorCount) => {\n    let maxFiles = maxNumberOfFilesForFileupload;\n    let message = gettext('Please upload no more than {maxFiles} files at a time.');\n    message = message.replace('{maxFiles}', maxFiles);\n    toaster.danger(message);\n  };\n\n  maxFileSizeErrorCallback = (file) => {\n    let { forbidUploadFileList } = this.state;\n    forbidUploadFileList.push(file);\n    this.setState({forbidUploadFileList: forbidUploadFileList});\n  };\n\n  onChunkingComplete = (resumableFile) => {\n\n    let allFilesUploaded = this.state.allFilesUploaded;\n    if (allFilesUploaded === true) {\n      this.setState({allFilesUploaded: false});\n    }\n\n    //get parent_dir relative_path\n    let path = this.props.path === '/' ? '/' : this.props.path + '/';\n    let fileName = resumableFile.fileName;\n    let relativePath = resumableFile.relativePath;\n    let isFile = fileName === relativePath;\n\n    //update formdata\n    resumableFile.formData = {};\n    if (isFile) { // upload file\n      resumableFile.formData  = {\n        parent_dir: path,\n      };\n    } else { // upload folder\n      let relative_path = relativePath.slice(0, relativePath.lastIndexOf('/') + 1);\n      resumableFile.formData  = {\n        parent_dir: path,\n        relative_path: relative_path\n      };\n    }\n  };\n\n  onFileAdded = (resumableFile, files) => {\n    let isFile = resumableFile.fileName === resumableFile.relativePath;\n    // uploading is file and only upload one file\n    if (isFile && files.length === 1) {\n      let hasRepetition = false;\n      /*\n      let direntList = this.props.direntList;\n      for (let i = 0; i < direntList.length; i++) {\n        if (direntList[i].type === 'file' && direntList[i].name === resumableFile.fileName) {\n          hasRepetition = true;\n          break;\n        }\n      }\n      */\n      if (hasRepetition) {\n        this.setState({\n          isUploadRemindDialogShow: true,\n          currentResumableFile: resumableFile,\n        });\n      } else {\n        this.setUploadFileList(this.resumable.files);\n        let { token, relativePath } = this.props;\n        seafileAPI.sharedLinkGetFileUploadUrl(token, relativePath).then(res => {\n          this.resumable.opts.target = res.data.upload_link + '?ret-json=1';\n          this.resumableUpload(resumableFile);\n        }).catch(error => {\n          let errMessage = Utils.getErrorMsg(error);\n          toaster.danger(errMessage);\n        });\n      }\n    } else {\n      this.setUploadFileList(this.resumable.files);\n      if (!this.isUploadLinkLoaded) {\n        this.isUploadLinkLoaded = true;\n        let { token, relativePath } = this.props;\n        seafileAPI.sharedLinkGetFileUploadUrl(token, relativePath).then(res => {\n          this.resumable.opts.target = res.data.upload_link + '?ret-json=1';\n          this.resumable.upload();\n        }).catch(error => {\n          let errMessage = Utils.getErrorMsg(error);\n          toaster.danger(errMessage);\n        });\n      }\n    }\n  };\n\n  resumableUpload = (resumableFile) => {\n    let { repoID, path } = this.props;\n    seafileAPI.getFileUploadedBytes(repoID, path, resumableFile.fileName).then(res => {\n      let uploadedBytes = res.data.uploadedBytes;\n      let blockSize = parseInt(resumableUploadFileBlockSize) * 1024 * 1024 || 1024 * 1024;\n      let offset = Math.floor(uploadedBytes / blockSize);\n      resumableFile.markChunksCompleted(offset);\n      this.resumable.upload();\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  };\n\n  filesAddedComplete = (resumable, files) => {\n    let { forbidUploadFileList } = this.state;\n    if (forbidUploadFileList.length > 0 && files.length === 0) {\n      this.setState({\n        isUploadProgressDialogShow: true,\n        totalProgress: 100\n      });\n    }\n  };\n\n  setUploadFileList = () => {\n    let uploadFileList = this.resumable.files;\n    this.setState({\n      uploadFileList: uploadFileList,\n      isUploadProgressDialogShow: true,\n    });\n    Utils.registerGlobalVariable('uploader', 'isUploadProgressDialogShow', true);\n  };\n\n  onFileProgress = (resumableFile) => {\n    let uploadBitrate = this.getBitrate();\n    let uploadFileList = this.state.uploadFileList.map(item => {\n      if (item.uniqueIdentifier === resumableFile.uniqueIdentifier) {\n        if (uploadBitrate) {\n          let lastSize = (item.size - (item.size * item.progress())) * 8;\n          let time = Math.floor(lastSize / uploadBitrate);\n          item.remainingTime = time;\n        }\n      }\n      return item;\n    });\n\n    this.setState({\n      uploadBitrate: uploadBitrate,\n      uploadFileList: uploadFileList\n    });\n  };\n\n  getBitrate = () => {\n    let loaded = 0;\n    let uploadBitrate = 0;\n    let now = new Date().getTime();\n\n    this.resumable.files.forEach(file => {\n      loaded += file.progress() * file.size;\n    });\n\n    if (this.timestamp) {\n      let timeDiff = (now - this.timestamp);\n      if (timeDiff < this.bitrateInterval) {\n        return this.state.uploadBitrate;\n      }\n\n      // 1. Cancel will produce loaded greater than this.loaded\n      // 2. reset can make this.loaded to be 0\n      if (loaded < this.loaded || this.loaded === 0) {\n        this.loaded = loaded; //\n      }\n\n      uploadBitrate = (loaded - this.loaded) * (1000 / timeDiff) * 8;\n    }\n\n    this.timestamp = now;\n    this.loaded = loaded;\n\n    return uploadBitrate;\n  };\n\n  onProgress = () => {\n    let progress = Math.round(this.resumable.progress() * 100);\n    this.setState({totalProgress: progress});\n    Utils.registerGlobalVariable('uploader', 'totalProgress', progress);\n  };\n\n  onFileUploadSuccess = (resumableFile, message) => {\n    let formData = resumableFile.formData;\n    let currentTime = new Date().getTime()/1000;\n    message = formData.replace ? message : JSON.parse(message)[0];\n    if (formData.relative_path) { // upload folder\n      // 'upload folder' is not supported\n      /*\n      let relative_path = formData.relative_path;\n      let dir_name = relative_path.slice(0, relative_path.indexOf('/'));\n      let dirent = {\n        id: message.id,\n        name: dir_name,\n        type: 'dir',\n        mtime: currentTime,\n      };\n\n      // update folders cache\n      let isExist = this.notifiedFolders.some(item => {return item.name === dirent.name;});\n      if (!isExist) {\n        this.notifiedFolders.push(dirent);\n        this.props.onFileUploadSuccess(dirent);\n      }\n\n      // update uploadFileList\n      let uploadFileList = this.state.uploadFileList.map(item => {\n        if (item.uniqueIdentifier === resumableFile.uniqueIdentifier) {\n          item.newFileName = relative_path + message.name;\n          item.isSaved = true;\n        }\n        return item;\n      });\n      this.setState({uploadFileList: uploadFileList});\n\n      return;\n      */\n    }\n\n    // replacing file is not allowed in shared link with 'can_upload' permission\n    /*\n    if (formData.replace) { // upload file -- replace exist file\n      let fileName = resumableFile.fileName;\n      let dirent = {\n        id: message,\n        name: fileName,\n        type: 'file',\n        mtime: currentTime\n      };\n      this.props.onFileUploadSuccess(dirent); // this contance: just one file\n\n      let uploadFileList = this.state.uploadFileList.map(item => {\n        if (item.uniqueIdentifier === resumableFile.uniqueIdentifier) {\n          item.newFileName = fileName;\n          item.isSaved = true;\n        }\n        return item;\n      });\n      this.setState({uploadFileList: uploadFileList});\n\n      return;\n    }\n    */\n\n    // upload file -- add files\n    let dirent = {\n      id: message.id,\n      type: 'file',\n      name: message.name,\n      size: message.size,\n      mtime: currentTime,\n    };\n    this.props.onFileUploadSuccess(dirent); // this contance:  no repetition file\n\n    let uploadFileList = this.state.uploadFileList.map(item => {\n      if (item.uniqueIdentifier === resumableFile.uniqueIdentifier) {\n        item.newFileName = message.name;\n        item.isSaved = true;\n      }\n      return item;\n    });\n    this.setState({uploadFileList: uploadFileList});\n  };\n\n  onFileError = (resumableFile, message) => {\n    let error = '';\n    if (!message) {\n      error = gettext('Network error');\n    } else {\n      // eg: '{\"error\": \"Internal error\" \\n }'\n      let errorMessage = message.replace(/\\n/g, '');\n      errorMessage  = JSON.parse(errorMessage);\n      error = errorMessage.error;\n      if (error === 'File locked by others.') {\n        error = gettext('File is locked by others.');\n      }\n      if (error === 'Internal error.') {\n        error = gettext('Internal Server Error');\n      }\n    }\n\n    let uploadFileList = this.state.uploadFileList.map(item => {\n      if (item.uniqueIdentifier === resumableFile.uniqueIdentifier) {\n        this.state.retryFileList.push(item);\n        item.error = error;\n      }\n      return item;\n    });\n\n    this.loaded = 0;  // reset loaded data;\n    this.setState({\n      retryFileList: this.state.retryFileList,\n      uploadFileList: uploadFileList\n    });\n\n  };\n\n  onComplete = () => {\n    this.notifiedFolders = [];\n    // reset upload link loaded\n    this.isUploadLinkLoaded = false;\n    this.setState({allFilesUploaded: true});\n  };\n\n  onPause = () => {\n\n  };\n\n  onError = (message) => {\n    // reset upload link loaded\n    this.isUploadLinkLoaded = false;\n    // After the error, the user can switch windows\n    Utils.registerGlobalVariable('uploader', 'totalProgress', 100);\n  };\n\n  onFileRetry = () => {\n    // todo, cancel upload file, uploded again;\n  };\n\n  onBeforeCancel = () => {\n    // todo, giving a pop message ?\n  };\n\n  onCancel = () => {\n\n  };\n\n  setHeaders = (resumableFile, resumable) => {\n    let offset = resumable.offset;\n    let chunkSize = resumable.getOpt('chunkSize');\n    let fileSize = resumableFile.size === 0 ? 1 : resumableFile.size;\n    let startByte = offset !== 0 ? offset * chunkSize : 0;\n    let endByte = Math.min(fileSize, (offset + 1) * chunkSize) - 1;\n\n    if (fileSize - resumable.endByte < chunkSize && !resumable.getOpt('forceChunkSize')) {\n      endByte = fileSize;\n    }\n\n    let headers = {\n      'Accept': 'application/json; text/javascript, */*; q=0.01',\n      'Content-Disposition': 'attachment; filename=\"' + encodeURI(resumableFile.fileName) + '\"',\n      'Content-Range': 'bytes ' + startByte + '-' + endByte + '/' + fileSize,\n    };\n\n    return headers;\n  };\n\n  setQuery = (resumableFile) => {\n    let formData = resumableFile.formData;\n    return formData;\n  };\n\n  generateUniqueIdentifier = (file) => {\n    let relativePath = file.webkitRelativePath||file.relativePath||file.fileName||file.name;\n    return MD5(relativePath + new Date()) + relativePath;\n  };\n\n  onClick = (e) => {\n    e.nativeEvent.stopImmediatePropagation();\n    e.stopPropagation();\n  };\n\n  onFileUpload = () => {\n    this.uploadInput.current.removeAttribute('webkitdirectory');\n\n    this.uploadInput.current.click();\n  };\n\n  onFolderUpload = () => {\n    this.uploadInput.current.setAttribute('webkitdirectory', 'webkitdirectory');\n    this.uploadInput.current.click();\n  };\n\n  onDragStart = () => {\n    this.uploadInput.current.setAttribute('webkitdirectory', 'webkitdirectory');\n  };\n\n  onCloseUploadDialog = () => {\n    this.loaded = 0;\n    this.resumable.files = [];\n    // reset upload link loaded\n    this.isUploadLinkLoaded = false;\n    this.setState({isUploadProgressDialogShow: false, uploadFileList: [], forbidUploadFileList: []});\n    Utils.registerGlobalVariable('uploader', 'isUploadProgressDialogShow', false);\n  };\n\n  onUploadCancel = (uploadingItem) => {\n\n    let uploadFileList = this.state.uploadFileList.filter(item => {\n      if (item.uniqueIdentifier === uploadingItem.uniqueIdentifier) {\n        item.cancel(); // execute cancel function will delete the file at the same time\n        return false;\n      }\n      return true;\n    });\n\n    if (!this.resumable.isUploading()) {\n      this.setState({\n        totalProgress: '100',\n        allFilesUploaded: true,\n      });\n      this.loaded = 0;\n    }\n\n    this.setState({uploadFileList: uploadFileList});\n  };\n\n  onCancelAllUploading = () => {\n    let uploadFileList = this.state.uploadFileList.filter(item => {\n      if (Math.round(item.progress() !== 1)) {\n        item.cancel();\n        return false;\n      }\n      return true;\n    });\n\n    this.loaded = 0;\n\n    this.setState({\n      allFilesUploaded: true,\n      totalProgress: '100',\n      uploadFileList: uploadFileList\n    });\n    // reset upload link loaded\n    this.isUploadLinkLoaded = false;\n  };\n\n  onUploadRetry = (resumableFile) => {\n\n    let { token, relativePath } = this.props;\n    seafileAPI.sharedLinkGetFileUploadUrl(token, relativePath).then(res => {\n      this.resumable.opts.target = res.data.upload_link + '?ret-json=1';\n\n      let retryFileList = this.state.retryFileList.filter(item => {\n        return item.uniqueIdentifier !== resumableFile.uniqueIdentifier;\n      });\n      let uploadFileList = this.state.uploadFileList.map(item => {\n        if (item.uniqueIdentifier === resumableFile.uniqueIdentifier) {\n          item.error = null;\n          this.retryUploadFile(item);\n        }\n        return item;\n      });\n\n      this.setState({\n        retryFileList: retryFileList,\n        uploadFileList: uploadFileList\n      });\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  };\n\n  onUploadRetryAll = () => {\n\n    let { token, relativePath } = this.props;\n    seafileAPI.sharedLinkGetFileUploadUrl(token, relativePath).then(res => {\n      this.resumable.opts.target = res.data.upload_link + '?ret-json=1';\n      this.state.retryFileList.forEach(item => {\n        item.error = false;\n        this.retryUploadFile(item);\n      });\n\n      let uploadFileList = this.state.uploadFileList.slice(0);\n      this.setState({\n        retryFileList: [],\n        uploadFileList: uploadFileList\n      });\n\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  };\n\n  retryUploadFile = (resumableFile) => {\n    let { repoID, path } = this.props;\n    let fileName = resumableFile.fileName;\n    let isFile = resumableFile.fileName === resumableFile.relativePath;\n    if (!isFile) {\n      let relative_path = resumableFile.formData.relative_path;\n      let prefix = path === '/' ? (path + relative_path) : (path + '/' + relative_path);\n      fileName = prefix + fileName;\n    }\n\n    resumableFile.bootstrap();\n    var firedRetry = false;\n    resumableFile.resumableObj.on('chunkingComplete', () => {\n      if(!firedRetry) {\n        seafileAPI.getFileUploadedBytes(repoID, path, fileName).then(res => {\n          let uploadedBytes = res.data.uploadedBytes;\n          let blockSize = parseInt(resumableUploadFileBlockSize) * 1024 * 1024 || 1024 * 1024;\n          let offset = Math.floor(uploadedBytes / blockSize);\n          resumableFile.markChunksCompleted(offset);\n\n          resumableFile.resumableObj.upload();\n\n        }).catch(error => {\n          let errMessage = Utils.getErrorMsg(error);\n          toaster.danger(errMessage);\n        });\n      }\n      firedRetry = true;\n    });\n  };\n\n  uploadFile = () => {\n    let resumableFile = this.resumable.files[this.resumable.files.length - 1];\n\n    let { token, relativePath } = this.props;\n    seafileAPI.sharedLinkGetFileUploadUrl(token, relativePath).then(res => {\n      this.resumable.opts.target = res.data.upload_link + '?ret-json=1';\n      this.setState({\n        isUploadRemindDialogShow: false,\n        isUploadProgressDialogShow: true,\n        uploadFileList: [...this.state.uploadFileList, resumableFile]\n      }, () => {\n        this.resumable.upload();\n      });\n      Utils.registerGlobalVariable('uploader', 'isUploadProgressDialogShow', true);\n\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  };\n\n  cancelFileUpload = () => {\n    this.resumable.files.pop(); //delete latest file；\n    this.setState({isUploadRemindDialogShow: false});\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <div className=\"file-uploader-container\">\n          <div className=\"file-uploader\">\n            <input className=\"upload-input\" type=\"file\" ref={this.uploadInput} onClick={this.onClick}/>\n          </div>\n        </div>\n        {this.state.isUploadProgressDialogShow &&\n          <UploadProgressDialog\n            retryFileList={this.state.retryFileList}\n            uploadFileList={this.state.uploadFileList}\n            forbidUploadFileList={this.state.forbidUploadFileList}\n            totalProgress={this.state.totalProgress}\n            uploadBitrate={this.state.uploadBitrate}\n            allFilesUploaded={this.state.allFilesUploaded}\n            onCloseUploadDialog={this.onCloseUploadDialog}\n            onCancelAllUploading={this.onCancelAllUploading}\n            onUploadCancel={this.onUploadCancel}\n            onUploadRetry={this.onUploadRetry}\n            onUploadRetryAll={this.onUploadRetryAll}\n          />\n        }\n      </Fragment>\n    );\n  }\n}\n\nFileUploader.propTypes = propTypes;\n\nexport default FileUploader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Alert } from 'reactstrap';\nimport { gettext } from '../../utils/constants';\nimport FileChooser from '../file-chooser/file-chooser';\n\nconst propTypes = {\n  sharedToken: PropTypes.string.isRequired,\n  parentDir: PropTypes.string.isRequired,\n  items: PropTypes.array.isRequired,\n  toggleCancel: PropTypes.func.isRequired,\n  handleSaveSharedDir: PropTypes.func.isRequired,\n};\n\nclass SaveSharedDirDialog extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      repo: null,\n      selectedPath: '',\n      errMessage: '',\n    };\n  }\n\n  onSaveSharedFile = () => {\n    this.props.handleSaveSharedDir(this.state.repo.repo_id, this.state.selectedPath);\n  };\n\n  onDirentItemClick = (repo, selectedPath, dirent) => {\n    if (dirent.type === 'dir') {\n      this.setState({\n        repo: repo,\n        selectedPath: selectedPath,\n      });\n    }\n    else {\n      this.setState({\n        repo: null,\n        selectedPath: '',\n      });\n    }\n  };\n\n  onRepoItemClick = (repo) => {\n    this.setState({\n      repo: repo,\n      selectedPath: '/',\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={true} className=\"sf-save-file\">\n        <ModalHeader toggle={this.props.toggleCancel}>{gettext('Save to:')}</ModalHeader>\n        <ModalBody>\n          <FileChooser\n            isShowFile={false}\n            onDirentItemClick={this.onDirentItemClick}\n            onRepoItemClick={this.onRepoItemClick}\n            mode=\"only_all_repos\"\n          />\n          {this.state.errMessage && <Alert color=\"danger\">{this.state.errMessage}</Alert>}\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.props.toggleCancel}>{gettext('Cancel')}</Button>\n          { this.state.selectedPath ?\n            <Button color=\"primary\" onClick={this.onSaveSharedFile}>{gettext('Submit')}</Button>\n            :\n            <Button color=\"primary\" disabled>{gettext('Submit')}</Button>\n          }\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nSaveSharedDirDialog.propTypes = propTypes;\n\nexport default SaveSharedDirDialog;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport MD5 from 'MD5';\nimport ReactDom from 'react-dom';\nimport { Button, Dropdown, DropdownToggle, DropdownItem, UncontrolledTooltip } from 'reactstrap';\nimport moment from 'moment';\nimport Account from './components/common/account';\nimport { useGoFileserver, fileServerRoot, gettext, siteRoot, mediaUrl, logoPath, logoWidth, logoHeight, siteTitle, thumbnailSizeForOriginal } from './utils/constants';\nimport { Utils } from './utils/utils';\nimport { seafileAPI } from './utils/seafile-api';\nimport Loading from './components/loading';\nimport toaster from './components/toast';\nimport ModalPortal from './components/modal-portal';\nimport ZipDownloadDialog from './components/dialog/zip-download-dialog';\nimport ImageDialog from './components/dialog/image-dialog';\nimport FileUploader from './components/shared-link-file-uploader/file-uploader';\nimport SaveSharedDirDialog from './components/dialog/save-shared-dir-dialog';\nimport CopyMoveDirentProgressDialog from './components/dialog/copy-move-dirent-progress-dialog';\nimport RepoInfoBar from './components/repo-info-bar';\nimport RepoTag from './models/repo-tag';\n\nimport './css/shared-dir-view.css';\nimport './css/grid-view.css';\n\nmoment.locale(window.app.config.lang);\n\nlet loginUser = window.app.pageOptions.name;\nlet {\n  token, dirName, dirPath, sharedBy,\n  repoID, relativePath,\n  mode, thumbnailSize, zipped,\n  trafficOverLimit, canDownload,\n  noQuota, canUpload, enableVideoThumbnail\n} = window.shared.pageOptions;\n\nconst showDownloadIcon = !trafficOverLimit && canDownload;\n\nclass SharedDirView extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      errorMsg: '',\n      items: [],\n\n      isAllItemsSelected: false,\n      selectedItems: [],\n\n      sortBy: 'name', // 'name' or 'time' or 'size'\n      sortOrder: 'asc', // 'asc' or 'desc'\n\n      isZipDialogOpen: false,\n      zipFolderPath: '',\n\n      usedRepoTags: [],\n      isRepoInfoBarShow: false,\n\n      isSaveSharedDirDialogShow: false,\n      itemsForSave: [],\n\n      asyncCopyMoveTaskId: '',\n      asyncOperationProgress: 0,\n      asyncOperatedFilesLength: 0,\n      isCopyMoveProgressDialogShow: false,\n\n      isImagePopupOpen: false,\n      imageItems: [],\n      imageIndex: 0\n    };\n  }\n\n  componentDidMount() {\n    if (trafficOverLimit) {\n      toaster.danger(gettext('File download is disabled: the share link traffic of owner is used up.'), {\n        duration: 3\n      });\n    }\n\n    seafileAPI.listSharedDir(token, relativePath, thumbnailSize).then((res) => {\n      const items = res.data['dirent_list'].map(item => {\n        item.isSelected = false;\n        return item;\n      });\n      this.setState({\n        isLoading: false,\n        errorMsg: '',\n        items: Utils.sortDirentsInSharedDir(items, this.state.sortBy, this.state.sortOrder)\n      });\n      this.getThumbnails();\n    }).catch((error) => {\n      let errorMsg = Utils.getErrorMsg(error);\n      this.setState({\n        isLoading: false,\n        errorMsg: errorMsg\n      });\n    });\n\n    this.getShareLinkRepoTags();\n  }\n\n  sortItems = (sortBy, sortOrder) => {\n    this.setState({\n      sortBy: sortBy,\n      sortOrder: sortOrder,\n      items: Utils.sortDirentsInSharedDir(this.state.items, sortBy, sortOrder)\n    });\n  };\n\n  getThumbnails = () => {\n    let items = this.state.items.filter((item) => {\n      return !item.is_dir &&\n        (Utils.imageCheck(item.file_name) ||\n        (enableVideoThumbnail && Utils.videoCheck(item.file_name))) &&\n        !item.encoded_thumbnail_src;\n    });\n    if (items.length == 0) {\n      return ;\n    }\n\n    const len = items.length;\n    const _this = this;\n    let getThumbnail = function(i) {\n      const curItem = items[i];\n      seafileAPI.getShareLinkThumbnail(token, curItem.file_path, thumbnailSize).then((res) => {\n        curItem.encoded_thumbnail_src = res.data.encoded_thumbnail_src;\n      }).catch((error) => {\n        // do nothing\n      }).then(() => {\n        if (i < len - 1) {\n          getThumbnail(++i);\n        } else {\n          // when done, `setState()`\n          _this.setState({\n            items: _this.state.items\n          });\n        }\n      });\n    };\n    getThumbnail(0);\n  };\n\n  renderPath = () => {\n    return (\n      <React.Fragment>\n        {zipped.map((item, index) => {\n          if (index != zipped.length - 1) {\n            return (\n              <React.Fragment key={index}>\n                <a href={`?p=${encodeURIComponent(item.path)}&mode=${mode}`} className=\"mx-1 ellipsis\" title={item.name}>{item.name}</a>\n                <span> / </span>\n              </React.Fragment>\n            );\n          }\n          return null;\n        })\n        }\n        <span className=\"ml-1 ellipsis\" title={zipped[zipped.length - 1].name}>{zipped[zipped.length - 1].name}</span>\n      </React.Fragment>\n    );\n  };\n\n  zipDownloadFolder = (folderPath) => {\n    if (!useGoFileserver) {\n      this.setState({\n        isZipDialogOpen: true,\n        zipFolderPath: folderPath\n      });\n    }\n    else {\n      seafileAPI.getShareLinkZipTask(token, folderPath).then((res) => {\n        const zipToken = res.data['zip_token'];\n        location.href = `${fileServerRoot}zip/${zipToken}`;\n      }).catch((error) => {\n        let errorMsg = Utils.getErrorMsg(error);\n        this.setState({\n          isLoading: false,\n          errorMsg: errorMsg\n        });\n      });\n    }\n  };\n\n  zipDownloadSelectedItems = () => {\n    if (!useGoFileserver) {\n      this.setState({\n        isZipDialogOpen: true,\n        zipFolderPath: relativePath,\n        selectedItems: this.state.items.filter(item => item.isSelected)\n          .map(item => item.file_name || item.folder_name)\n      });\n    }\n    else {\n      let target = this.state.items.filter(item => item.isSelected).map(item => item.file_name || item.folder_name);\n      seafileAPI.getShareLinkDirentsZipTask(token, relativePath, target).then((res) => {\n        const zipToken = res.data['zip_token'];\n        location.href = `${fileServerRoot}zip/${zipToken}`;\n      }).catch((error) => {\n        let errorMsg = Utils.getErrorMsg(error);\n        this.setState({\n          isLoading: false,\n          errorMsg: errorMsg\n        });\n      });\n    }\n  };\n\n  async getAsyncCopyMoveProgress() {\n    let { asyncCopyMoveTaskId } = this.state;\n    try {\n      let res = await seafileAPI.queryAsyncOperationProgress(asyncCopyMoveTaskId);\n      let data = res.data;\n      if (data.failed) {\n        let message = gettext('Failed to copy files to another library.');\n        toaster.danger(message);\n        this.setState({\n          asyncOperationProgress: 0,\n          isCopyMoveProgressDialogShow: false,\n        });\n        return;\n      }\n\n      if (data.successful) {\n        this.setState({\n          asyncOperationProgress: 0,\n          isCopyMoveProgressDialogShow: false,\n        });\n        let message = gettext('Successfully copied files to another library.');\n        toaster.success(message);\n        return;\n      }\n      // init state: total is 0\n      let asyncOperationProgress = !data.total ? 0 : parseInt((data.done/data.total * 100).toFixed(2));\n\n      this.getAsyncCopyMoveProgress();\n      this.setState({asyncOperationProgress: asyncOperationProgress});\n    } catch (error) {\n      this.setState({\n        asyncOperationProgress: 0,\n        isCopyMoveProgressDialogShow: false,\n      });\n    }\n  }\n\n  saveSelectedItems = () => {\n    this.setState({\n      isSaveSharedDirDialogShow: true,\n      itemsForSave: this.state.items.filter(item => item.isSelected)\n        .map(item => item.file_name || item.folder_name)\n    });\n  };\n\n  saveAllItems = () => {\n    this.setState({\n      isSaveSharedDirDialogShow: true,\n      itemsForSave: this.state.items\n        .map(item => item.file_name || item.folder_name)\n    });\n  };\n\n  toggleSaveSharedDirCancel = () => {\n    this.setState({\n      isSaveSharedDirDialogShow: false,\n      itemsForSave: []\n    });\n  };\n\n  handleSaveSharedDir = (destRepoID, dstPath) => {\n\n    const itemsForSave = this.state.itemsForSave;\n\n    seafileAPI.saveSharedDir(destRepoID, dstPath, token, relativePath, itemsForSave).then((res) => {\n      this.setState({\n        isSaveSharedDirDialogShow: false,\n        itemsForSave: [],\n        isCopyMoveProgressDialogShow: true,\n        asyncCopyMoveTaskId: res.data.task_id,\n        asyncOperatedFilesLength: itemsForSave.length,\n      }, () => {\n        this.getAsyncCopyMoveProgress();\n      });\n    }).catch((error) => {\n      let errMessage = Utils.getErrorMsg(error);\n      this.setState({errMessage: errMessage});\n    });\n  };\n\n  onProgressDialogToggle = () => {\n    let { asyncOperationProgress } = this.state;\n    if (asyncOperationProgress !== 100) {\n      let taskId = this.state.asyncCopyMoveTaskId;\n      seafileAPI.cancelCopyMoveOperation(taskId);\n    }\n\n    this.setState({\n      asyncOperationProgress: 0,\n      isCopyMoveProgressDialogShow: false,\n    });\n  };\n\n  closeZipDialog = () => {\n    this.setState({\n      isZipDialogOpen: false,\n      zipFolderPath: '',\n      selectedItems: []\n    });\n  };\n\n  // for image popup\n  prepareImageItem = (item) => {\n    const name = item.file_name;\n    const fileExt = name.substr(name.lastIndexOf('.') + 1).toLowerCase();\n    const isGIF = fileExt == 'gif';\n\n    let src;\n    const fileURL = `${siteRoot}d/${token}/files/?p=${encodeURIComponent(item.file_path)}`;\n    if (!isGIF) {\n      src = `${siteRoot}thumbnail/${token}/${thumbnailSizeForOriginal}${Utils.encodePath(item.file_path)}`;\n    } else {\n      src = `${fileURL}&raw=1`;\n    }\n\n    return {\n      'name': name,\n      'url': fileURL,\n      'src': src\n    };\n  };\n\n  showImagePopup = (curItem) => {\n    const items = this.state.items.filter((item) => {\n      return !item.is_dir && Utils.imageCheck(item.file_name);\n    });\n    const imageItems = items.map((item) => {\n      return this.prepareImageItem(item);\n    });\n\n    this.setState({\n      isImagePopupOpen: true,\n      imageItems: imageItems,\n      imageIndex: items.indexOf(curItem)\n    });\n  };\n\n  closeImagePopup = () => {\n    this.setState({\n      isImagePopupOpen: false\n    });\n  };\n\n  moveToPrevImage = () => {\n    const imageItemsLength = this.state.imageItems.length;\n    this.setState((prevState) => ({\n      imageIndex: (prevState.imageIndex + imageItemsLength - 1) % imageItemsLength\n    }));\n  };\n\n  moveToNextImage = () => {\n    const imageItemsLength = this.state.imageItems.length;\n    this.setState((prevState) => ({\n      imageIndex: (prevState.imageIndex + 1) % imageItemsLength\n    }));\n  };\n\n  toggleAllSelected = () => {\n    this.setState((prevState) => ({\n      isAllItemsSelected: !prevState.isAllItemsSelected,\n      items: this.state.items.map((item) => {\n        item.isSelected = !prevState.isAllItemsSelected;\n        return item;\n      })\n    }));\n  };\n\n  toggleItemSelected = (targetItem, isSelected) => {\n    this.setState({\n      items: this.state.items.map((item) => {\n        if (item === targetItem) {\n          item.isSelected = isSelected;\n        }\n        return item;\n      })\n    }, () => {\n      this.setState({\n        isAllItemsSelected: !this.state.items.some(item => !item.isSelected)\n      });\n    });\n  };\n\n  onUploadFile = (e) => {\n    e.nativeEvent.stopImmediatePropagation();\n    this.uploader.onFileUpload();\n  };\n\n  onFileUploadSuccess = (direntObject) => {\n    const { name, size } = direntObject;\n    const newItem = {\n      isSelected: false,\n      file_name: name,\n      file_path: Utils.joinPath(relativePath, name),\n      is_dir: false,\n      last_modified: moment().format(),\n      size: size\n    };\n    const folderItems = this.state.items.filter(item => { return item.is_dir; });\n    // put the new file as the first file\n    let items = Array.from(this.state.items);\n    items.splice(folderItems.length, 0, newItem);\n    this.setState({items: items});\n    seafileAPI.shareLinksUploadDone(token, Utils.joinPath(dirPath, name));\n  };\n\n  getShareLinkRepoTags = () => {\n    seafileAPI.getShareLinkRepoTags(token).then(res => {\n      let usedRepoTags = [];\n      res.data.repo_tags.forEach(item => {\n        let usedRepoTag = new RepoTag(item);\n        if (usedRepoTag.fileCount > 0) {\n          usedRepoTags.push(usedRepoTag);\n        }\n      });\n      this.setState({usedRepoTags: usedRepoTags});\n      if (usedRepoTags.length != 0 && relativePath == '/') {\n        this.setState({isRepoInfoBarShow: true});\n      }\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  };\n\n  render() {\n    const isDesktop = Utils.isDesktop();\n    const modeBaseClass = 'btn btn-secondary btn-icon sf-view-mode-btn';\n    return (\n      <React.Fragment>\n        <div className=\"h-100 d-flex flex-column\">\n          <div className=\"top-header d-flex justify-content-between\">\n            <a href={siteRoot}>\n              <img src={mediaUrl + logoPath} height={logoHeight} width={logoWidth} title={siteTitle} alt=\"logo\" />\n            </a>\n            {loginUser && <Account />}\n          </div>\n          <div className=\"o-auto\">\n            <div className=\"shared-dir-view-main\">\n              <h2 className=\"h3\">{dirName}</h2>\n              <p>{gettext('Shared by: ')}{sharedBy}</p>\n              <div className=\"d-flex justify-content-between align-items-center op-bar\">\n                <p className=\"m-0 mr-4 ellipsis d-flex align-items-center\"><span className=\"flex-none\">{gettext('Current path: ')}</span>{this.renderPath()}</p>\n                <div className=\"flex-none\">\n                  {isDesktop &&\n                  <div className=\"view-mode btn-group\">\n                    <a\n                      href={`?p=${encodeURIComponent(relativePath)}&mode=list`}\n                      className={`${modeBaseClass} sf2-icon-list-view ${mode == 'list' ? 'current-mode' : ''}`}\n                      title={gettext('List')}\n                      aria-label={gettext('List')}\n                    ></a>\n                    <a\n                      href={`?p=${encodeURIComponent(relativePath)}&mode=grid`}\n                      className={`${modeBaseClass} sf2-icon-grid-view ${mode == 'grid' ? 'current-mode' : ''}`}\n                      title={gettext('Grid')}\n                      aria-label={gettext('Grid')}\n                    ></a>\n                  </div>\n                  }\n                  {canUpload && (\n                    <Button disabled={noQuota}\n                      title={noQuota ? gettext('The owner of this library has run out of space.') : ''}\n                      onClick={this.onUploadFile} className=\"ml-2 shared-dir-op-btn shared-dir-upload-btn\"\n                    >{gettext('Upload')}</Button>\n                  )}\n                  {showDownloadIcon &&\n                  <Fragment>\n                    {this.state.items.some(item => item.isSelected) ?\n                      <Fragment>\n                        <Button color=\"success\" onClick={this.zipDownloadSelectedItems} className=\"ml-2 shared-dir-op-btn\">{gettext('ZIP Selected Items')}</Button>\n                        {(canDownload && loginUser && (loginUser !== sharedBy)) &&\n                        <Button color=\"success\" onClick={this.saveSelectedItems} className=\"ml-2 shared-dir-op-btn\">{gettext('Save Selected Items')}</Button>\n                        }\n                      </Fragment>\n                      :\n                      <Fragment>\n                        <Button color=\"success\" onClick={this.zipDownloadFolder.bind(this, relativePath)} className=\"ml-2 shared-dir-op-btn\">{gettext('ZIP')}</Button>\n                        {(canDownload && loginUser && (loginUser !== sharedBy)) &&\n                        <Button color=\"success\" onClick={this.saveAllItems} className=\"ml-2 shared-dir-op-btn\">{gettext('Save')}</Button>\n                        }\n                      </Fragment>\n                    }\n                  </Fragment>\n                  }\n                </div>\n              </div>\n              {!noQuota && canUpload && (\n                <FileUploader\n                  ref={uploader => this.uploader = uploader}\n                  dragAndDrop={false}\n                  token={token}\n                  path={dirPath === '/' ? dirPath : dirPath.replace(/\\/+$/, '')}\n                  relativePath={relativePath === '/' ? relativePath : relativePath.replace(/\\/+$/, '')}\n                  repoID={repoID}\n                  onFileUploadSuccess={this.onFileUploadSuccess}\n                />\n              )}\n\n              {this.state.isRepoInfoBarShow && (\n                <RepoInfoBar\n                  repoID={repoID}\n                  currentPath={'/'}\n                  usedRepoTags={this.state.usedRepoTags}\n                  shareLinkToken={token}\n                  enableFileDownload={showDownloadIcon}\n                  className=\"mx-0\"\n                />\n              )}\n\n              <Content\n                isDesktop={isDesktop}\n                isLoading={this.state.isLoading}\n                errorMsg={this.state.errorMsg}\n                items={this.state.items}\n                sortBy={this.state.sortBy}\n                sortOrder={this.state.sortOrder}\n                sortItems={this.sortItems}\n                isAllItemsSelected={this.state.isAllItemsSelected}\n                toggleAllSelected={this.toggleAllSelected}\n                toggleItemSelected={this.toggleItemSelected}\n                zipDownloadFolder={this.zipDownloadFolder}\n                showImagePopup={this.showImagePopup}\n              />\n            </div>\n          </div>\n        </div>\n        {this.state.isZipDialogOpen &&\n        <ModalPortal>\n          <ZipDownloadDialog\n            token={token}\n            path={this.state.zipFolderPath}\n            target={this.state.selectedItems}\n            toggleDialog={this.closeZipDialog}\n          />\n        </ModalPortal>\n        }\n        {this.state.isSaveSharedDirDialogShow &&\n          <SaveSharedDirDialog\n            sharedToken={token}\n            parentDir={relativePath}\n            items={this.state.itemsForSave}\n            toggleCancel={this.toggleSaveSharedDirCancel}\n            handleSaveSharedDir={this.handleSaveSharedDir}\n          />\n        }\n        {this.state.isCopyMoveProgressDialogShow && (\n          <CopyMoveDirentProgressDialog\n            type='copy'\n            asyncOperatedFilesLength={this.state.asyncOperatedFilesLength}\n            asyncOperationProgress={this.state.asyncOperationProgress}\n            toggleDialog={this.onProgressDialogToggle}\n          />\n        )}\n        {this.state.isImagePopupOpen &&\n        <ModalPortal>\n          <ImageDialog\n            imageItems={this.state.imageItems}\n            imageIndex={this.state.imageIndex}\n            closeImagePopup={this.closeImagePopup}\n            moveToPrevImage={this.moveToPrevImage}\n            moveToNextImage={this.moveToNextImage}\n          />\n        </ModalPortal>\n        }\n      </React.Fragment>\n    );\n  }\n}\n\nclass Content extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  sortByName = (e) => {\n    e.preventDefault();\n    const sortBy = 'name';\n    const sortOrder = this.props.sortOrder == 'asc' ? 'desc' : 'asc';\n    this.props.sortItems(sortBy, sortOrder);\n  };\n\n  sortByTime = (e) => {\n    e.preventDefault();\n    const sortBy = 'time';\n    const sortOrder = this.props.sortOrder == 'asc' ? 'desc' : 'asc';\n    this.props.sortItems(sortBy, sortOrder);\n  };\n\n  sortBySize = (e) => {\n    e.preventDefault();\n    const sortBy = 'size';\n    const sortOrder = this.props.sortOrder == 'asc' ? 'desc' : 'asc';\n    this.props.sortItems(sortBy, sortOrder);\n  };\n\n  render() {\n    const {\n      isDesktop,\n      isLoading, errorMsg, items,\n      sortBy, sortOrder,\n      isAllItemsSelected\n    } = this.props;\n\n    if (isLoading) {\n      return <Loading />;\n    }\n\n    if (errorMsg) {\n      return <p className=\"error mt-6 text-center\">{errorMsg}</p>;\n    }\n\n    const tbody = (\n      <tbody>\n        {items.map((item, index) => {\n          return <Item\n            key={index}\n            isDesktop={isDesktop}\n            item={item}\n            zipDownloadFolder={this.props.zipDownloadFolder}\n            showImagePopup={this.props.showImagePopup}\n            toggleItemSelected={this.props.toggleItemSelected}\n          />;\n        })}\n      </tbody>\n    );\n\n    if (!isDesktop) {\n      return (\n        <table className=\"table-hover table-thead-hidden\">\n          <thead>\n            <tr>\n              <th width=\"12%\"></th>\n              <th width=\"80%\"></th>\n              <th width=\"8%\"></th>\n            </tr>\n          </thead>\n          {tbody}\n        </table>\n      );\n    }\n\n    const sortIcon = <span className={`fas ${sortOrder == 'asc' ? 'fa-caret-up' : 'fa-caret-down'}`}></span>;\n    return mode == 'list' ? (\n      <table className=\"table-hover\">\n        <thead>\n          <tr>\n            {showDownloadIcon &&\n            <th width=\"3%\" className=\"text-center\">\n              <input type=\"checkbox\" checked={isAllItemsSelected} onChange={this.props.toggleAllSelected} />\n            </th>\n            }\n            <th width=\"5%\"></th>\n            <th width={showDownloadIcon ? '50%' : '53%'}><a className=\"d-block table-sort-op\" href=\"#\" onClick={this.sortByName}>{gettext('Name')} {sortBy == 'name' && sortIcon}</a></th>\n            <th width=\"8%\"></th>\n            <th width=\"14%\"><a className=\"d-block table-sort-op\" href=\"#\" onClick={this.sortBySize}>{gettext('Size')} {sortBy == 'size' && sortIcon}</a></th>\n            <th width=\"13%\"><a className=\"d-block table-sort-op\" href=\"#\" onClick={this.sortByTime}>{gettext('Last Update')} {sortBy == 'time' && sortIcon}</a></th>\n            <th width=\"7%\"></th>\n          </tr>\n        </thead>\n        {tbody}\n      </table>\n    ) : (\n      <ul className=\"grid-view\">\n        {items.map((item, index) => {\n          return <GridItem\n            key={index}\n            item={item}\n            zipDownloadFolder={this.props.zipDownloadFolder}\n            showImagePopup={this.props.showImagePopup}\n          />;\n        })}\n      </ul>\n    );\n  }\n}\n\nContent.propTypes = {\n  isDesktop: PropTypes.bool.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  isAllItemsSelected: PropTypes.bool.isRequired,\n  errorMsg: PropTypes.string.isRequired,\n  items: PropTypes.array.isRequired,\n  sortItems: PropTypes.func.isRequired,\n  sortBy: PropTypes.string.isRequired,\n  sortOrder: PropTypes.string.isRequired,\n  toggleAllSelected: PropTypes.func.isRequired,\n  toggleItemSelected: PropTypes.func.isRequired,\n  zipDownloadFolder: PropTypes.func.isRequired,\n  showImagePopup: PropTypes.func.isRequired,\n};\n\nclass Item extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isIconShown: false,\n      isOpMenuOpen: false\n    };\n  }\n\n  toggleOpMenu = () => {\n    this.setState({isOpMenuOpen: !this.state.isOpMenuOpen});\n  };\n\n  handleMouseOver = () => {\n    this.setState({isIconShown: true});\n  };\n\n  handleMouseOut = () => {\n    this.setState({isIconShown: false});\n  };\n\n  zipDownloadFolder = (e) => {\n    e.preventDefault();\n    this.props.zipDownloadFolder.bind(this, this.props.item.folder_path)();\n  };\n\n  handleFileClick = (e) => {\n    const item = this.props.item;\n    if (!Utils.imageCheck(item.file_name)) {\n      return;\n    }\n\n    e.preventDefault();\n    this.props.showImagePopup(item);\n  };\n\n  toggleItemSelected = (e) => {\n    this.props.toggleItemSelected(this.props.item, e.target.checked);\n  };\n\n  render() {\n    const { item, isDesktop } = this.props;\n    const { isIconShown } = this.state;\n\n    let toolTipID = '';\n    let tagTitle = '';\n    if (item.file_tags && item.file_tags.length > 0) {\n      toolTipID = MD5(item.file_name).slice(0, 7);\n      tagTitle = item.file_tags.map(item => item.tag_name).join(' ');\n    }\n\n    if (item.is_dir) {\n      return isDesktop ? (\n        <tr onMouseOver={this.handleMouseOver} onMouseOut={this.handleMouseOut} onFocus={this.handleMouseOver}>\n          {showDownloadIcon &&\n            <td className=\"text-center\">\n              <input type=\"checkbox\" checked={item.isSelected} onChange={this.toggleItemSelected} />\n            </td>\n          }\n          <td className=\"text-center\"><img src={Utils.getFolderIconUrl()} alt=\"\" width=\"24\" /></td>\n          <td>\n            <a href={`?p=${encodeURIComponent(item.folder_path.substr(0, item.folder_path.length - 1))}&mode=${mode}`}>{item.folder_name}</a>\n          </td>\n          <td></td>\n          <td></td>\n          <td title={moment(item.last_modified).format('llll')}>{moment(item.last_modified).fromNow()}</td>\n          <td>\n            {showDownloadIcon &&\n            <a role=\"button\" className={`action-icon sf2-icon-download${isIconShown ? '' : ' invisible'}`} href=\"#\" onClick={this.zipDownloadFolder} title={gettext('Download')} aria-label={gettext('Download')}>\n            </a>\n            }\n          </td>\n        </tr>\n      ) : (\n        <tr>\n          <td className=\"text-center\"><img src={Utils.getFolderIconUrl()} alt=\"\" width=\"24\" /></td>\n          <td>\n            <a href={`?p=${encodeURIComponent(item.folder_path.substr(0, item.folder_path.length - 1))}&mode=${mode}`}>{item.folder_name}</a>\n            <br />\n            <span className=\"item-meta-info\">{moment(item.last_modified).fromNow()}</span>\n          </td>\n          <td>\n            {showDownloadIcon &&\n            <Dropdown isOpen={this.state.isOpMenuOpen} toggle={this.toggleOpMenu}>\n              <DropdownToggle\n                tag=\"i\"\n                className=\"sf-dropdown-toggle fa fa-ellipsis-v ml-0\"\n                title={gettext('More Operations')}\n                data-toggle=\"dropdown\"\n                aria-expanded={this.state.isOpMenuOpen}\n              />\n              <div className={this.state.isOpMenuOpen ? '' : 'd-none'} onClick={this.toggleOpMenu}>\n                <div className=\"mobile-operation-menu-bg-layer\"></div>\n                <div className=\"mobile-operation-menu\">\n                  <DropdownItem className=\"mobile-menu-item\" onClick={this.zipDownloadFolder}>{gettext('Download')}</DropdownItem>\n                </div>\n              </div>\n            </Dropdown>\n            }\n          </td>\n        </tr>\n      );\n    } else {\n      const fileURL = `${siteRoot}d/${token}/files/?p=${encodeURIComponent(item.file_path)}`;\n      const thumbnailURL = item.encoded_thumbnail_src ? `${siteRoot}${item.encoded_thumbnail_src}` : '';\n      return isDesktop ? (\n        <tr onMouseOver={this.handleMouseOver} onMouseOut={this.handleMouseOut} onFocus={this.handleMouseOver}>\n          {showDownloadIcon &&\n            <td className=\"text-center\">\n              <input type=\"checkbox\" checked={item.isSelected} onChange={this.toggleItemSelected} />\n            </td>\n          }\n          <td className=\"text-center\">\n            {thumbnailURL ?\n              <img className=\"thumbnail\" src={thumbnailURL} alt=\"\" /> :\n              <img src={Utils.getFileIconUrl(item.file_name)} alt=\"\" width=\"24\" />\n            }\n          </td>\n          <td>\n            <a href={fileURL} onClick={this.handleFileClick}>{item.file_name}</a>\n          </td>\n          <td className=\"tag-list-title\">\n            {(item.file_tags && item.file_tags.length > 0) && (\n              <Fragment>\n                <div id={`tag-list-title-${toolTipID}`} className=\"dirent-item tag-list tag-list-stacked\">\n                  {item.file_tags.map((fileTag, index) => {\n                    let length = item.file_tags.length;\n                    return (\n                      <span className=\"file-tag\" key={fileTag.file_tag_id} style={{zIndex:length - index, backgroundColor:fileTag.tag_color}}></span>\n                    );\n                  })}\n                </div>\n                <UncontrolledTooltip target={`tag-list-title-${toolTipID}`} placement=\"bottom\">\n                  {tagTitle}\n                </UncontrolledTooltip>\n              </Fragment>\n            )}\n          </td>\n          <td>{Utils.bytesToSize(item.size)}</td>\n          <td title={moment(item.last_modified).format('llll')}>{moment(item.last_modified).fromNow()}</td>\n          <td>\n            {showDownloadIcon &&\n            <a className={`action-icon sf2-icon-download${isIconShown ? '' : ' invisible'}`} href={`${fileURL}&dl=1`} title={gettext('Download')} aria-label={gettext('Download')}></a>\n            }\n          </td>\n        </tr>\n      ) : (\n        <tr>\n          <td className=\"text-center\">\n            {thumbnailURL ?\n              <img className=\"thumbnail\" src={thumbnailURL} alt=\"\" /> :\n              <img src={Utils.getFileIconUrl(item.file_name)} alt=\"\" width=\"24\" />\n            }\n          </td>\n          <td>\n            <a href={fileURL} onClick={this.handleFileClick}>{item.file_name}</a>\n            <br />\n            <span className=\"item-meta-info\">{Utils.bytesToSize(item.size)}</span>\n            <span className=\"item-meta-info\">{moment(item.last_modified).fromNow()}</span>\n          </td>\n          <td>\n            {showDownloadIcon &&\n            <Dropdown isOpen={this.state.isOpMenuOpen} toggle={this.toggleOpMenu}>\n              <DropdownToggle\n                tag=\"i\"\n                className=\"sf-dropdown-toggle fa fa-ellipsis-v ml-0\"\n                title={gettext('More Operations')}\n                data-toggle=\"dropdown\"\n                aria-expanded={this.state.isOpMenuOpen}\n              />\n              <div className={this.state.isOpMenuOpen ? '' : 'd-none'} onClick={this.toggleOpMenu}>\n                <div className=\"mobile-operation-menu-bg-layer\"></div>\n                <div className=\"mobile-operation-menu\">\n                  <DropdownItem className=\"mobile-menu-item\" tag=\"a\" href={`${fileURL}&dl=1`}>{gettext('Download')}</DropdownItem>\n                </div>\n              </div>\n            </Dropdown>\n            }\n          </td>\n        </tr>\n      );\n    }\n  }\n}\n\nItem.propTypes = {\n  isDesktop: PropTypes.bool.isRequired,\n  item: PropTypes.object.isRequired,\n  sortItems: PropTypes.func.isRequired,\n  sortBy: PropTypes.string.isRequired,\n  sortOrder: PropTypes.string.isRequired,\n  toggleAllSelected: PropTypes.func.isRequired,\n  toggleItemSelected: PropTypes.func.isRequired,\n  zipDownloadFolder: PropTypes.func.isRequired,\n  showImagePopup: PropTypes.func.isRequired,\n};\n\nclass GridItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isIconShown: false\n    };\n  }\n\n  handleMouseOver = () => {\n    this.setState({isIconShown: true});\n  };\n\n  handleMouseOut = () => {\n    this.setState({isIconShown: false});\n  };\n\n  zipDownloadFolder = (e) => {\n    e.preventDefault();\n    this.props.zipDownloadFolder.bind(this, this.props.item.folder_path)();\n  };\n\n  handleFileClick = (e) => {\n    const item = this.props.item;\n    if (!Utils.imageCheck(item.file_name)) {\n      return;\n    }\n\n    e.preventDefault();\n    this.props.showImagePopup(item);\n  };\n\n  render() {\n    const item = this.props.item;\n    const { isIconShown } = this.state;\n\n    if (item.is_dir) {\n      const folderURL = `?p=${encodeURIComponent(item.folder_path.substr(0, item.folder_path.length - 1))}&mode=${mode}`;\n      return (\n        <li className=\"grid-item\" onMouseOver={this.handleMouseOver} onMouseOut={this.handleMouseOut} onFocus={this.handleMouseOver}>\n          <a href={folderURL} className=\"grid-file-img-link d-block\">\n            <img src={Utils.getFolderIconUrl(false, 192)} alt=\"\" width=\"96\" height=\"96\" />\n          </a>\n          <a href={folderURL} className=\"grid-file-name grid-file-name-link\">{item.folder_name}</a>\n          {showDownloadIcon &&\n            <a role=\"button\" className={`action-icon sf2-icon-download${isIconShown ? '' : ' invisible'}`} href=\"#\" onClick={this.zipDownloadFolder} title={gettext('Download')} aria-label={gettext('Download')}>\n            </a>\n          }\n        </li>\n      );\n    } else {\n      const fileURL = `${siteRoot}d/${token}/files/?p=${encodeURIComponent(item.file_path)}`;\n      const thumbnailURL = item.encoded_thumbnail_src ? `${siteRoot}${item.encoded_thumbnail_src}` : '';\n      return (\n        <li className=\"grid-item\" onMouseOver={this.handleMouseOver} onMouseOut={this.handleMouseOut} onFocus={this.handleMouseOver}>\n          <a href={fileURL} className=\"grid-file-img-link d-block\" onClick={this.handleFileClick}>\n            {thumbnailURL ?\n              <img className=\"thumbnail\" src={thumbnailURL} alt=\"\" /> :\n              <img src={Utils.getFileIconUrl(item.file_name, 192)} alt=\"\" width=\"96\" height=\"96\" />\n            }\n          </a>\n          <a href={fileURL} className=\"grid-file-name grid-file-name-link\" onClick={this.handleFileClick}>{item.file_name}</a>\n          {showDownloadIcon &&\n            <a className={`action-icon sf2-icon-download${isIconShown ? '' : ' invisible'}`} href={`${fileURL}&dl=1`} title={gettext('Download')} aria-label={gettext('Download')}>\n            </a>\n          }\n        </li>\n      );\n    }\n  }\n}\n\nGridItem.propTypes = {\n  item: PropTypes.object.isRequired,\n  zipDownloadFolder: PropTypes.func.isRequired,\n  showImagePopup: PropTypes.func.isRequired,\n};\n\nReactDom.render(<SharedDirView />, document.getElementById('wrapper'));\n"],"names":["CopyMoveDirentProgressDialog","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","_this$props","this","props","type","asyncOperationProgress","asyncOperatedFilesLength","title","gettext","replace","progressStyle","width","lineHeight","textAlign","_jsxs","Modal","isOpen","children","_jsx","ModalHeader","toggle","toggleDialog","ModalBody","style","minHeight","className","height","role","React","ImageDialog","imageItems","imageIndex","imageItemsLength","length","name","imageTitle","concat","Lightbox","mainSrc","src","nextSrc","prevSrc","onCloseRequest","closeImagePopup","onMovePrevRequest","moveToPrevImage","onMoveNextRequest","moveToNextImage","imagePadding","imageLoadErrorMessage","prevLabel","nextLabel","closeLabel","zoomInLabel","zoomOutLabel","interval","ZipDownloadDialog","_this","call","queryZipProgress","zipToken","state","seafileAPI","then","res","data","failed","clearInterval","setState","isLoading","errorMsg","failed_reason","zipProgress","total","zipped","toFixed","location","href","fileServerRoot","catch","error","Utils","getErrorMsg","cancelZipTask","_this2","token","path","repoID","target","getShareLinkDirentsZipTask","getShareLinkZipTask","zipDownload","setInterval","Content","_React$Component2","_super2","_this$props$data","Loading","ListTaggedFilesDialog","onFileTagChanged","TaggedFile","parent_path","dirent","filename","direntPath","onDeleteTaggedFile","taggedFile","fileTagID","file_tag_id","deleteFileTag","getTaggedFiles","updateUsedRepoTags","file_deleted","errMessage","toaster","danger","currentTag","shareLinkToken","getShareLinkTaggedFiles","id","listTaggedFiles","taggedFileList","undefined","tagged_files","forEach","file","push","maxWidth","onClose","map","index","enableFileDownload","ModalFooter","Button","color","onClick","toggleCancel","_this3","onMouseEnter","active","onMouseLeave","deleteFile","e","preventDefault","_this$props2","joinPath","siteRoot","encodePath","onFocus","Fragment","colSpan","rel","bytesToSize","size","moment","mtime","fromNow","Draft","item","created","created_at","createdStr","Date","getTime","format","ownerNickname","owner_nickname","originRepoID","origin_repo_id","draftFilePath","draft_file_path","ListRepoDraftsDialog","onDeleteDraftItem","draft","editorUtilities","deleteDraft","drafts","filter","msg","success","listRepoDrafts","DraftItem","draftItem","_this4","getFileName","bind","RepoInfoBar","onListTaggedFiles","isListTaggedFileShow","onCloseDialog","toggleDrafts","showRepoDrafts","usedRepoTags","draftCounts","usedRepoTag","backgroundColor","fileCount","ModalPortal","UPLOAD_UPLOADING","UPLOAD_ERROR","UPLOAD_ISSAVING","UPLOAD_UPLOADED","UploadListItem","onUploadCancel","resumableFile","onUploadRetry","formatFileSize","uploadState","nextProps","remainingTime","isSaved","progress","Math","round","fileName","newFileName","isUploading","formatTime","dangerouslySetInnerHTML","__html","ForbidUploadListItem","maxUploadFileSize","UploadProgressDialog","onCancelAllUploading","onMinimizeUpload","nativeEvent","stopImmediatePropagation","isMinimized","onCloseUpload","onCloseUploadDialog","uploadBitrate","formatBitRate","uploadedMessage","uploadingMessage","totalProgress","uploadingOptions","uploadedOptions","allFilesUploaded","retryFileList","onUploadRetryAll","forbidUploadFileList","uploadFileList","FileUploader","componentWillUnmount","window","onbeforeunload","dragAndDrop","resumable","disableDropOnDocument","uploader","isUploadProgressDialogShow","bindCallbackHandler","minFileSizeErrorCallback","fileTypeErrorCallback","maxFilesErrorCallback","opts","maxFileSizeErrorCallback","bindEventHandler","on","onChunkingComplete","_assertThisInitialized","onFileAdded","filesAddedComplete","onFileProgress","onFileUploadSuccess","onProgress","onComplete","onPause","onFileRetry","onFileError","onError","onBeforeCancel","onCancel","onDragStart","files","errorCount","maxFiles","maxNumberOfFilesForFileupload","message","relativePath","isFile","formData","parent_dir","relative_path","slice","lastIndexOf","setUploadFileList","sharedLinkGetFileUploadUrl","upload_link","resumableUpload","isUploadLinkLoaded","_this$props3","upload","_this$props4","getFileUploadedBytes","uploadedBytes","blockSize","parseInt","resumableUploadFileBlockSize","offset","floor","markChunksCompleted","registerGlobalVariable","getBitrate","uniqueIdentifier","lastSize","time","loaded","now","timestamp","timeDiff","bitrateInterval","currentTime","JSON","parse","errorMessage","notifiedFolders","setHeaders","chunkSize","getOpt","fileSize","startByte","endByte","min","encodeURI","setQuery","generateUniqueIdentifier","webkitRelativePath","MD5","stopPropagation","onFileUpload","uploadInput","current","removeAttribute","click","onFolderUpload","setAttribute","uploadingItem","cancel","_this$props5","retryUploadFile","_this$props6","_this$props7","bootstrap","firedRetry","resumableObj","uploadFile","_this$props8","isUploadRemindDialogShow","_toConsumableArray","cancelFileUpload","pop","currentResumableFile","Resumablejs","query","fileType","filetypes","maxFileSize","testMethod","testChunks","headers","withCredentials","simultaneousUploads","fileParameterName","forceChunkSize","maxChunkRetries","minFileSize","assignBrowse","enableDropOnDocument","ref","SaveSharedDirDialog","onSaveSharedFile","handleSaveSharedDir","repo","repo_id","selectedPath","onDirentItemClick","onRepoItemClick","FileChooser","isShowFile","mode","Alert","disabled","app","config","lang","loginUser","pageOptions","_window$shared$pageOp","shared","dirName","dirPath","sharedBy","thumbnailSize","trafficOverLimit","canDownload","noQuota","canUpload","enableVideoThumbnail","showDownloadIcon","SharedDirView","sortItems","sortBy","sortOrder","items","sortDirentsInSharedDir","getThumbnails","is_dir","imageCheck","file_name","videoCheck","encoded_thumbnail_src","len","getThumbnail","i","curItem","getShareLinkThumbnail","file_path","renderPath","encodeURIComponent","zipDownloadFolder","folderPath","useGoFileserver","isZipDialogOpen","zipFolderPath","zipDownloadSelectedItems","isSelected","folder_name","selectedItems","saveSelectedItems","isSaveSharedDirDialogShow","itemsForSave","saveAllItems","toggleSaveSharedDirCancel","destRepoID","dstPath","saveSharedDir","isCopyMoveProgressDialogShow","asyncCopyMoveTaskId","task_id","getAsyncCopyMoveProgress","onProgressDialogToggle","taskId","cancelCopyMoveOperation","closeZipDialog","prepareImageItem","isGIF","substr","toLowerCase","fileURL","thumbnailSizeForOriginal","showImagePopup","isImagePopupOpen","indexOf","prevState","toggleAllSelected","isAllItemsSelected","toggleItemSelected","targetItem","some","onUploadFile","direntObject","newItem","last_modified","folderItems","Array","from","splice","shareLinksUploadDone","getShareLinkRepoTags","repo_tags","RepoTag","isRepoInfoBarShow","duration","listSharedDir","_getAsyncCopyMoveProgress","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_message","wrap","_context","prev","next","queryAsyncOperationProgress","sent","abrupt","successful","done","t0","stop","isDesktop","modeBaseClass","mediaUrl","logoPath","logoHeight","logoWidth","siteTitle","alt","Account","currentPath","sharedToken","parentDir","_this5","sortByName","sortByTime","sortBySize","_this6","tbody","Item","sortIcon","checked","onChange","GridItem","_React$Component3","_super3","_this7","toggleOpMenu","isOpMenuOpen","handleMouseOver","isIconShown","handleMouseOut","folder_path","handleFileClick","toolTipID","tagTitle","file_tags","tag_name","join","onMouseOver","onMouseOut","getFolderIconUrl","Dropdown","DropdownToggle","tag","DropdownItem","thumbnailURL","getFileIconUrl","fileTag","zIndex","tag_color","UncontrolledTooltip","placement","_React$Component4","_super4","_this8","folderURL","ReactDom","document","getElementById"],"sourceRoot":""}