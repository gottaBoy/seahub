{"version":3,"file":"static/js/fileView.f3d13498.js","mappings":"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","sources":["components/file-content-view/audio.js","components/file-content-view/image.js","components/file-content-view/pdf.js","components/file-content-view/svg.js","components/file-content-view/video.js","file-view.js"],"sourcesContent":["import React from 'react';\nimport AudioPlayer from '../audio-player';\n\nimport '../../css/audio-file-view.css';\n\nconst { rawPath } = window.app.pageOptions;\n\nclass FileContent extends React.Component {\n  render() {\n    const videoJsOptions = {\n      autoplay: false,\n      controls: true,\n      preload: 'auto',\n      sources: [{\n        src: rawPath\n      }]\n    };\n    return (\n      <div className=\"file-view-content flex-1 audio-file-view\">\n        <AudioPlayer { ...videoJsOptions } />\n      </div>\n    );\n  }\n}\n\nexport default FileContent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Utils } from '../../utils/utils';\nimport { gettext, siteRoot } from '../../utils/constants';\n\nimport '../../css/image-file-view.css';\n\nconst {\n  repoID, repoEncrypted,\n  fileExt, filePath, fileName,\n  thumbnailSizeForOriginal,\n  previousImage, nextImage, rawPath,\n  xmindImageSrc // for xmind file\n} = window.app.pageOptions;\n\nlet previousImageUrl, nextImageUrl;\nif (previousImage) {\n  previousImageUrl = `${siteRoot}lib/${repoID}/file${Utils.encodePath(previousImage)}`;\n}\nif (nextImage) {\n  nextImageUrl = `${siteRoot}lib/${repoID}/file${Utils.encodePath(nextImage)}`;\n}\n\nclass FileContent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadFailed: false\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', (e) => {\n      if (previousImage && e.keyCode == 37) { // press '<-'\n        location.href = previousImageUrl;\n      }\n      if (nextImage && e.keyCode == 39) { // press '->'\n        location.href = nextImageUrl;\n      }\n    });\n  }\n\n  handleLoadFailure = () => {\n    this.setState({\n      loadFailed: true\n    });\n  };\n\n  render() {\n    if (this.state.loadFailed) {\n      return this.props.tip;\n    }\n\n    // request thumbnails for some files\n    // only for 'file view'. not for 'history/trash file view'\n    let thumbnailURL = '';\n    const fileExtList = ['tif', 'tiff', 'psd'];\n    if (!repoEncrypted && fileExtList.includes(fileExt)) {\n      thumbnailURL = `${siteRoot}thumbnail/${repoID}/${thumbnailSizeForOriginal}${Utils.encodePath(filePath)}`;\n    }\n\n    // for xmind file\n    const xmindSrc = xmindImageSrc ? `${siteRoot}${xmindImageSrc}` : '';\n\n    return (\n      <div className=\"file-view-content flex-1 image-file-view\">\n        {previousImage && (\n          <a href={previousImageUrl} id=\"img-prev\" title={gettext('you can also press ← ')}><span className=\"fas fa-chevron-left\"></span></a>\n        )}\n        {nextImage && (\n          <a href={nextImageUrl} id=\"img-next\" title={gettext('you can also press →')}><span className=\"fas fa-chevron-right\"></span></a>\n        )}\n        <img src={xmindSrc || thumbnailURL || rawPath} alt={fileName} id=\"image-view\" onError={this.handleLoadFailure} />\n      </div>\n    );\n  }\n}\n\nFileContent.propTypes = {\n  tip: PropTypes.string.isRequired,\n};\n\nexport default FileContent;\n","import React from 'react';\nimport PDFViewer from '../pdf-viewer';\n\nimport '../../css/pdf-file-view.css';\n\nclass FileContent extends React.Component {\n  render() {\n    return (\n      <div className=\"file-view-content flex-1 pdf-file-view\">\n        <PDFViewer />\n      </div>\n    );\n  }\n}\n\nexport default FileContent;\n","import React from 'react';\n\nimport '../../css/svg-file-view.css';\n\nconst {\n  fileName, rawPath\n} = window.app.pageOptions;\n\nclass FileContent extends React.Component {\n  render() {\n    return (\n      <div className=\"file-view-content flex-1 svg-file-view\">\n        <img src={rawPath} alt={fileName} id=\"svg-view\" />\n      </div>\n    );\n  }\n}\n\nexport default FileContent;\n","import React from 'react';\nimport VideoPlayer from '../video-player';\n\nimport '../../css/video-file-view.css';\n\nconst {\n  rawPath\n} = window.app.pageOptions;\n\nclass FileContent extends React.Component {\n  render() {\n    const videoJsOptions = {\n      autoplay: false,\n      controls: true,\n      preload: 'auto',\n      playbackRates: [0.5, 1, 1.5, 2],\n      sources: [{\n        src: rawPath\n      }]\n    };\n    return (\n      <div className=\"file-view-content flex-1 video-file-view\">\n        <VideoPlayer { ...videoJsOptions } />\n      </div>\n    );\n  }\n}\n\nexport default FileContent;\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport FileView from './components/file-view/file-view';\nimport FileViewTip from './components/file-view/file-view-tip';\nimport Image from './components/file-content-view/image';\nimport SVG from './components/file-content-view/svg';\nimport PDF from './components/file-content-view/pdf';\nimport Video from './components/file-content-view/video';\nimport Audio from './components/file-content-view/audio';\n\nconst {\n  fileType, err\n} = window.app.pageOptions;\n\nclass InnerFileView extends React.Component {\n\n  render() {\n    if (err) {\n      return (\n        <FileView content={<FileViewTip />} />\n      );\n    }\n\n    let content;\n    switch (fileType) {\n      case 'Image':\n        content = <Image tip={<FileViewTip />} />;\n        break;\n      case 'XMind':\n        content = <Image tip={<FileViewTip />} />;\n        break;\n      case 'SVG':\n        content = <SVG />;\n        break;\n      case 'PDF':\n        content = <PDF />;\n        break;\n      case 'Video':\n        content = <Video />;\n        break;\n      case 'Audio':\n        content = <Audio />;\n        break;\n      default:\n        break;\n    }\n\n    return (\n      <FileView content={content} />\n    );\n  }\n}\n\nReactDom.render(<InnerFileView />, document.getElementById('wrapper'));\n"],"names":["rawPath","window","app","pageOptions","FileContent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","videoJsOptions","autoplay","controls","preload","sources","src","_jsx","className","children","AudioPlayer","_objectSpread","React","previousImageUrl","nextImageUrl","_window$app$pageOptio","repoID","repoEncrypted","fileExt","filePath","fileName","thumbnailSizeForOriginal","previousImage","nextImage","xmindImageSrc","concat","siteRoot","Utils","encodePath","props","_this","call","handleLoadFailure","setState","loadFailed","state","document","addEventListener","e","keyCode","location","href","this","tip","thumbnailURL","includes","xmindSrc","_jsxs","id","title","gettext","alt","onError","PDFViewer","playbackRates","VideoPlayer","fileType","err","InnerFileView","FileView","content","FileViewTip","Image","SVG","PDF","Video","Audio","ReactDom","getElementById"],"sourceRoot":""}